(dp1
S'output'
p2
S"<class 'psycopg2.DataError'> NUMERIC scale 5 must be between 0 and precision 2\nLINE 12:     logp NUMERIC(2,5),\n                  ^\n"
p3
sS'layer'
p4
S'/home/www-data/web2py/applications/naturar/models/db.py'
p5
sS'code'
p6
S'# -*- coding: utf-8 -*-\n\n#########################################################################\n## This scaffolding model makes your app work on Google App Engine too\n## File is released under public domain and you can use without limitations\n#########################################################################\n\n## if SSL/HTTPS is properly configured and you want all HTTP requests to\n## be redirected to HTTPS, uncomment the line below:\n# request.requires_https()\n\n## app configuration made easy. Look inside private/appconfig.ini\nfrom gluon.contrib.appconfig import AppConfig\n\n## to use mol field of RDKIT\nfrom gluon.dal import SQLCustomType\n\n## once in production, remove reload=True to gain full speed\nmyconf = AppConfig(reload=True)\n\n\n\n#~ if not request.env.web2py_runtime_gae:\n    #~ ## if NOT running on Google App Engine use SQLite or other DB\n    #~ db = DAL(myconf.take(\'db.uri\'), pool_size=myconf.take(\'db.pool_size\', cast=int), check_reserved=[\'all\'])\n#~ else:\n    #~ ## connect to Google BigTable (optional \'google:datastore://namespace\')\n    #~ db = DAL(\'google:datastore+ndb\')\n    #~ ## store sessions and tickets there\n    #~ session.connect(request, response, db=db)\n    #~ ## or store session in Memcache, Redis, etc.\n    #~ ## from gluon.contrib.memdb import MEMDB\n    #~ ## from google.appengine.api.memcache import Client\n    #~ ## session.connect(request, response, db = MEMDB(Client()))\n    #~ \ndb = DAL("postgres://fito:123456@localhost/naturardb")\n#~ db = DAL("postgres://fito:123456@localhost/naturardb", migrate=True, fake_migrate=True,)\n#~ db = DAL("postgres://fito:123456@localhost/naturardb", migrate=True)\n\n#~ db = DAL("postgres://fito:123456@localhost/naturardb", lazy_tables=True)\n\n## by default give a view/generic.extension to all actions from localhost\n## none otherwise. a pattern can be \'controller/function.extension\'\nresponse.generic_patterns = [\'*\'] if request.is_local else []\n## choose a style for forms\nresponse.formstyle = myconf.take(\'forms.formstyle\')  # or \'bootstrap3_stacked\' or \'bootstrap2\' or other\nresponse.form_label_separator = myconf.take(\'forms.separator\')\n\n\n## (optional) optimize handling of static files\n# response.optimize_css = \'concat,minify,inline\'\n# response.optimize_js = \'concat,minify,inline\'\n## (optional) static assets folder versioning\n# response.static_version = \'0.0.0\'\n#########################################################################\n## Here is sample code if you need for\n## - email capabilities\n## - authentication (registration, login, logout, ... )\n## - authorization (role based authorization)\n## - services (xml, csv, json, xmlrpc, jsonrpc, amf, rss)\n## - old style crud actions\n## (more options discussed in gluon/tools.py)\n#########################################################################\n\nfrom gluon.tools import Auth, Service, PluginManager\n\nauth = Auth(db)\nservice = Service()\nplugins = PluginManager()\n\n## extra fields (mjl)\nauth.settings.extra_fields[\'auth_user\']= [\n    Field(\'address\', type=\'text\', label=T(\'Address\')),\n    Field(\'phone\', type=\'text\', label=T(\'Phone\')),\n    Field(\'picture\', type=\'upload\', label=T(\'Picture\')),\n    Field(\'rearchdescription\', type=\'text\', label=T(\'Research Description\')),\n    Field(\'additionalinfo\', type=\'text\', label=T(\'Additional Information\')),\n    ]\n\n\n## create all tables needed by auth if not custom tables\nauth.define_tables(username=False, signature=False) \n\n\n## configure email\nmail = auth.settings.mailer\nmail.settings.server = \'logging\' if request.is_local else myconf.take(\'smtp.server\')\nmail.settings.sender = myconf.take(\'smtp.sender\')\nmail.settings.login = myconf.take(\'smtp.login\')\n\n## configure auth policy\nauth.settings.registration_requires_verification = False\nauth.settings.registration_requires_approval = False\nauth.settings.reset_password_requires_verification = True\n\n\n#########################################################################\n## Define your tables below (or better in another model file) for example\n##\n## >>> db.define_table(\'mytable\',Field(\'myfield\',\'string\'))\n##\n## Fields can be \'string\',\'text\',\'password\',\'integer\',\'double\',\'boolean\'\n##       \'date\',\'time\',\'datetime\',\'blob\',\'upload\', \'reference TABLENAME\'\n## There is an implicit \'id integer autoincrement\' field\n## Consult manual for more options, validators, etc.\n##\n## More API examples for controllers:\n##\n## >>> db.mytable.insert(myfield=\'value\')\n## >>> rows=db(db.mytable.myfield==\'value\').select(db.mytable.ALL)\n## >>> for row in rows: print row.id, row.myfield\n#########################################################################\n\n# --------------------------------------------------------------------\n# SETTINGS\n# --------------------------------------------------------------------\n\n\n#~ settings.max_size # get the value\n#~ settings.update_record(summary=new_summary) # set a value \ndb.define_table(\'settings\', \n    Field(\'imagedir\', default="applications/naturar/images_molecule/"),\n    #~ Field(\'max_size\', \'integer\', default=10),\n    #~ Field(\'summary\', \'text\', \'abc\'),\n)\n# create an instance of settings table\nsettings = db(db.settings.id > 0).select().first()\nif not settings:\n    settings = db.settings.insert()\n\n# --------------------------------------------------------------------    \n# LOCATION\n# --------------------------------------------------------------------\n\n\'\'\'data is extrated of Yahoo and Google webservices \'\'\'\ndb.define_table(\'location\',  \n    auth.signature,\n    Field(\'country\', type=\'string\'),\n    Field(\'state\', type=\'string\'),\n    Field(\'city\', type=\'string\'),\n    Field(\'place\', type=\'string\'),\n    Field(\'latitude\', type=\'double\'),\n    Field(\'longitude\', type=\'double\'),\n    Field(\'yahoowoeid\', type=\'integer\'),\n    Field(\'googleplaceid\', type=\'string\'),\n    Field(\'placetypename\', type=\'string\'),\n    )\n\n\n# --------------------------------------------------------------------\n# DOCS\n# --------------------------------------------------------------------\n\n\'\'\'\nStore bibliographic information, this can be obtained from Crossref API\n\'\'\'\ndb.define_table(\'doc\', \n    auth.signature,\n    Field(\'journal\', type=\'string\'),\n    Field(\'year\', type=\'datetime\', requires = IS_DATE(format=(\'%Y\'))),\n    Field(\'volume\', type=\'integer\'),\n    Field(\'issue\', type=\'integer\'),\n    Field(\'firstpage\', type=\'integer\'),\n    Field(\'lastpage\', type=\'integer\'),\n    Field(\'doi\', type=\'string\'),\n    Field(\'pubmed_id\'),\n    Field(\'title\', type=\'text\'),\n    Field(\'doctype\', type=\'string\'),\n    Field(\'authors\'),\n    Field(\'abstract\', type=\'text\'),\n    Field(\'url\', type=\'text\'),\n    )\n\n\n# --------------------------------------------------------------------\n# COMPOUND INFORMATION\n# --------------------------------------------------------------------\n\n\'\'\'\nStore compound information\n\'\'\'\ndb.define_table(\'compound\', \n    auth.signature,\n    Field(\'compoundname\', requires=IS_NOT_EMPTY()),\n    Field(\'iupacname\', type=\'string\'),\n    Field(\'inchi\', type=\'string\'),\n    Field(\'inchikey\', type=\'string\'),\n    Field(\'isosmiles\', type=\'string\'),\n    Field(\'cansmiles\', type=\'string\'),\n    Field(\'imagepath\', type=\'text\', readable=False, writable=False),\n    Field(\'addinfo\', type=\'text\'),\n    format=\'c%(id)i-%(name)s\',\n    )\n    \n\'\'\'\nMany to many table relationship: Docs and Compounds\n\'\'\'\ndb.define_table(\'compound_doc\',\n    auth.signature,\n    Field(\'compound_id\', \'reference compound\'),\n    Field(\'doc_id\', \'reference doc\'),\n    )\n\n\'\'\'\nStructures (conformers) of compounds\n\'\'\'\n#~ db.executesql(\'CREATE TABLE IF NOT EXISTS structure ( \\\n    #~ id integer NOT null, \\\n    #~ molstructure MOL, \\\n    #~ compound_id int references compound(id), \\\n    #~ CONSTRAINT structure_pk PRIMARY KEY (id));\')\nmol = SQLCustomType(\n    type =\'text\',\n    native =\'mol\',\n    )\n\ndb.define_table(\'structure\',\n    auth.signature,\n    Field(\'molstructure\', type=mol),\n    Field(\'compound_id\', \'reference compound\'),\n    )\n\n\'\'\'\nStore descriptors of 3D structures\n\'\'\'\ndb.define_table(\'structuredescriptor\',\n    auth.signature,\n    Field(\'methodname\', type=\'string\')\n    )\n    \n\'\'\'\nMany to many table relationship: StructureDescriptors and Structures\n\'\'\'\ndb.define_table(\'structure_descriptor\',\n    auth.signature,\n    Field(\'structuredescriptor_id\', \'reference structuredescriptor\'),\n    Field(\'structure_id\', \'reference structure\'),\n    Field(\'descriptorvalue\'),\n    )    \n\n\'\'\'\nTypes of compound synomys\n\'\'\'\ndb.define_table(\'synonymtype\',\n    auth.signature,\n    Field(\'synonymtype\', type=\'string\'),\n    ) \n\n\'\'\'\nStore synonyms of compound names\n\'\'\'\ndb.define_table(\'synonym\',\n    auth.signature,\n    Field(\'synonymtype_id\', \'reference synonymtype\'),\n    Field(\'synonymname\', type=\'string\'),\n    Field(\'compound_id\', \'reference compound\'),\n    )    \n\n\'\'\'\nList of compound classification, active.\n\'\'\'\ndb.define_table(\'classification\',\n    auth.signature,\n    Field(\'classificationname\', type=\'string\'),\n    Field(\'classificationdescription\', type=\'text\'),\n    )\n\n\'\'\'\nMany to many table relationship: Classification and Compounds\n\'\'\'\ndb.define_table(\'compound_classification\',\n    auth.signature,\n    Field(\'compound_id\', \'reference compound\'),\n    Field(\'classification_id\', \'reference classification\'),\n    )\n    \n\'\'\'\nList of compound class,  \nfuctional groups, ej aminas, sulfonamidas, etc.\n\'\'\'\ndb.define_table(\'chemicalclass\',\n    auth.signature,\n    Field(\'classname_en\', type=\'string\'),\n    Field(\'classname_es\', type=\'string\'),\n    Field(\'classdescription\', type=\'text\'),\n    )\n\n\'\'\'\nMany to many table relationship: Chemicalclass and Compounds,\n\'\'\'\ndb.define_table(\'compound_chemicalclass\',\n    auth.signature,\n    Field(\'compound_id\', \'reference compound\'),\n    Field(\'chemicalclass_id\', \'reference chemicalclass\'),\n    )\n    \n\'\'\'\nDefine isomer relationships between two compounds\n\'\'\'\ndb.define_table(\'isomer\',\n    auth.signature,\n    Field(\'compound1_id\', \'reference compound\'),\n    Field(\'compound2_id\', \'reference compound\'),\n    )\n\n\n#~ # define autocomplete function for extracto\n#~ db.compound_record.extract.widget = SQLFORM.widgets.autocomplete(\n     #~ request, db.extract_record.extract_name, id_field=db.extract_record.id, limitby=(0,10), min_length=2)\n\n\'\'\'\nList of calculated properties\n\'\'\'\ndb.define_table(\'compoundproperty\', \n    auth.signature,\n    Field(\'compound_id\', \'reference compound\'),\n    Field(\'molecularweight\', type=\'decimal(4,4)\'),\n    Field(\'molecularformula\', type=\'string\'),\n    Field(\'molecularvolume\', type=\'decimal(4,3)\', label="volumen"),\n    Field(\'logp\', type=\'decimal(2,5)\'),\n    Field(\'tpsa\', type=\'decimal(4,3)\'),\n    Field(\'hbd\', type=\'integer\'),\n    Field(\'hba\', type=\'integer\'),\n    Field(\'numrotatable\', type=\'integer\'),\n    Field(\'numring\', type=\'integer\'),\n    Field(\'numn\', type=\'integer\'),\n    Field(\'numo\', type=\'integer\'),\n    Field(\'nums\', type=\'integer\'),\n    Field(\'numro5violation\', type=\'integer\'),\n    )\n\n\'\'\'\nList of extra properties\n\'\'\'\ndb.define_table(\'extraproperty\', \n    auth.signature,\n    Field(\'extrapropertyname_en\', type=\'string\'),\n    Field(\'extrapropertyname_es\', type=\'string\'),\n    )\n\n\'\'\'\nMany to many table relationship: Extraproperty and Compounds,\n\'\'\'\ndb.define_table(\'compound_extraproperty\',\n    auth.signature,\n    Field(\'compound_id\', \'reference compound\'),\n    Field(\'extraproperty_id\', \'reference extraproperty\'),\n    Field(\'extrapropertyvalue\')\n    )\n\n\n# --------------------------------------------------------------------\n# SOURCE INFORMATION\n# --------------------------------------------------------------------\n\n\'\'\' \nTable where is stored source information obtained frod databases like \nCatalogue of Life using webservices.\ndbname is the name of the database whereis is obtained the data and \nidfromdb is the original ID code .\n\'\'\'\ndb.define_table(\'source\', \n    auth.signature,\n    Field(\'scientificname\', type=\'string\'),\n    Field(\'sourcekingdom\', type=\'string\'),\n    Field(\'sourcefamily\', type=\'string\'),\n    Field(\'sourcegenus\', type=\'string\'),\n    Field(\'sourcespecies\', type=\'string\'),\n    Field(\'variety\', type=\'string\'),\n    Field(\'ethnomedicinalinfo\', type=\'text\'),\n    Field(\'dbname\', type=\'string\'),\n    Field(\'idfromdb\', type=\'string\'),\n    )\n\n\'\'\'\nImages of sources\n\'\'\'\ndb.define_table(\'sourceimage\',\n    auth.signature,\n    Field(\'source_id\', \'reference source\'),\n    Field(\'sourceimage\', type=\'string\'),\n    Field(\'credit\', type=\'string\'),\n    )\n\n\'\'\'\nNative names of a source\n\'\'\'\ndb.define_table(\'nativename\',\n    auth.signature,\n    Field(\'source_id\', \'reference source\'),\n    Field(\'nativename\', type=\'string\'),\n    Field(\'culture\', type=\'string\'),\n    )\n    \n\'\'\'\nCommon names of a source\n\'\'\'\ndb.define_table(\'commonname\',\n    auth.signature,\n    Field(\'source_id\', \'reference source\'),\n    Field(\'commonname\', type=\'string\'),\n    )\n    \n\'\'\'\nMedicinal Uses\n\'\'\'\ndb.define_table(\'medicinal\',\n    auth.signature,\n    Field(\'medicinaluse_en\', type=\'string\'),\n    Field(\'medicinaluse_es\', type=\'string\'),\n    )\n\n\'\'\'\nMany to many table relationship: Medicinal Uses and Sources\n\'\'\'\ndb.define_table(\'source_medicinal\',\n    auth.signature,\n    Field(\'source_id\', \'reference source\'),\n    Field(\'medicinal_id\', \'reference medicinal\'),\n    )\n    \n\'\'\'\nFood Uses\n\'\'\'\ndb.define_table(\'food\',\n    auth.signature,\n    Field(\'fooduse_en\', type=\'string\'),\n    Field(\'fooduse_es\', type=\'string\'),\n    )\n\n\'\'\'\nMany to many table relationship: Food Uses and Sources\n\'\'\'\ndb.define_table(\'source_food\',\n    auth.signature,\n    Field(\'source_id\', \'reference source\'),\n    Field(\'food_id\', \'reference food\'),\n    )\n\n\n\'\'\'\nOther Uses\n\'\'\'\ndb.define_table(\'otheruse\',\n    auth.signature,\n    Field(\'otherusename\', type=\'string\'),\n    )\n\n\'\'\'\nMany to many table relationship: Other Uses and Sources\n\'\'\'\ndb.define_table(\'source_otheruse\',\n    auth.signature,\n    Field(\'source_id\', \'reference source\'),\n    Field(\'otheruse_id\', \'reference otheruse\'),\n    )\n\n\'\'\'\nMany to many table relationship: Location and Sources\n\'\'\'\ndb.define_table(\'source_location\',\n    auth.signature,\n    Field(\'source_id\', \'reference source\'),\n    Field(\'location_id\', \'reference location\'),\n    )\n\n\'\'\'\nMany to many table relationship: Docs and Sources\n\'\'\'\ndb.define_table(\'source_doc\',\n    auth.signature,\n    Field(\'source_id\', \'reference source\'),\n    Field(\'doc_id\', \'reference doc\'),\n    )\n     \n     \n# --------------------------------------------------------------------\n# USERS (cont.)\n# --------------------------------------------------------------------\n\n\'\'\'\nStore internal messages between members\n\'\'\'\ndb.define_table(\'message\',\n    auth.signature,\n    Field(\'messagetitle\', type=\'string\'),\n    Field(\'messagebody\', type=\'text\'),\n    Field(\'usersent_id\', \'reference auth_user\'),\n    Field(\'userreceiver_id\', \'reference auth_user\'),\n    Field(\'date\', type=\'datetime\'),\n    )\n\n\'\'\'\nResearch groups\n\'\'\'\ndb.define_table(\'researchgroup\',\n    auth.signature,\n    Field(\'reseachname\', type=\'string\'),\n    Field(\'institution\', type=\'string\'),\n    Field(\'webpage\', type=\'string\'),\n    Field(\'email\', type=\'string\'),\n    Field(\'telephone\', type=\'string\'),\n    Field(\'address\', type=\'string\'),\n    Field(\'location_id\', \'reference location\'),\n    Field(\'logo\', type=\'upload\'),\n    )\n    \n\'\'\'\nMany to many table relationship: Research Groups and Users\n\'\'\'\ndb.define_table(\'user_reseach\',\n    auth.signature,\n    Field(\'user_id\', \'reference auth_user\'),\n    Field(\'researchgroup_id\', \'reference researchgroup\'),\n    )\n    \n\'\'\'\nMany to many table relationship: Docs and Users\n\'\'\'\ndb.define_table(\'user_doc\',\n    auth.signature,\n    Field(\'user_id\', \'reference auth_user\'),\n    Field(\'doc_id\', \'reference doc\'),\n    )   \n\n\'\'\'\nMany to many table relationship: Compounds and Users to store in profile \n\'\'\'\ndb.define_table(\'bookmark\',\n    auth.signature,\n    Field(\'user_id\', \'reference auth_user\'),\n    Field(\'compound_id\', \'reference compound\'),\n    )   \n\n\n# --------------------------------------------------------------------\n# EXTRACTS\n# --------------------------------------------------------------------\n\n\'\'\'\nList of part from where you can obtain extract\n\'\'\'\ndb.define_table(\'partused\',\n    auth.signature,\n    Field(\'partname_en\'),\n    Field(\'partname_es\'),\n    )\n\n\'\'\'\nMain table of extract\n\'\'\'\ndb.define_table(\'extract\', \n    auth.signature,\n    Field(\'source_id\', \'reference source\'),\n    Field(\'location_id\', \'reference location\'),\n    Field(\'partused_id\', \'reference partused\'),\n    Field(\'extractpreparation\', type=\'text\'),\n    format=\'%(extract_name)s\',\n    )\n\n\'\'\'\nMany to many table relationship: Docs and Extract\n\'\'\'\ndb.define_table(\'extract_doc\',\n    auth.signature,\n    Field(\'extract_id\', \'reference extract\'),\n    Field(\'doc_id\', \'reference doc\'),\n    )\n\n\'\'\'\nMany to many table relationship: Compound and Extract\n\'\'\'\ndb.define_table(\'compound_extract\',\n    auth.signature,\n    Field(\'extract_id\', \'reference extract\'),\n    Field(\'compound_id\', \'reference compound\'),\n    Field(\'compoundamount\', type=\'double\'),\n    )\n\n\n# --------------------------------------------------------------------\n# ASSAYS\n# --------------------------------------------------------------------\n\n\'\'\'\nList of assays\n\'\'\'\ndb.define_table(\'assay\',\n    auth.signature,\n    Field(\'assayname\', type=\'string\'),\n    Field(\'assaydescription\', type=\'text\'),\n    Field(\'pubchecbioassay_id\'),\n    )\n\n\'\'\'\nMany to many table relationship: Assay and Extract\n\'\'\'\ndb.define_table(\'extract_assay\',\n    auth.signature,\n    Field(\'extract_id\', \'reference extract\'),\n    Field(\'compound_id\', \'reference compound\'),\n    Field(\'compoundamount\', type=\'double\'),    \n    Field(\'inhibition\', type=\'double\'),\n    Field(\'activity\', type=\'double\'),\n    Field(\'cytotoxicity\', type=\'double\'),\n    Field(\'sideEffects\', type=\'text\'),\n    )\n\n\'\'\'\nMany to many table relationship: Docs and Assay\n\'\'\'\ndb.define_table(\'assay_doc\',\n    auth.signature,\n    Field(\'assay_id\', \'reference assay\'),\n    Field(\'doc_id\', \'reference doc\'),\n    )\n\n\'\'\'\nList of assay targets\n\'\'\'\ndb.define_table(\'target\',\n    auth.signature,\n    Field(\'targetname\', type=\'string\'),\n    )\n\n\'\'\'\nMany to many table relationship: Target and Assay\n\'\'\'\ndb.define_table(\'assay_target\',\n    auth.signature,\n    Field(\'assay_id\', \'reference assay\'),\n    Field(\'target_id\', \'reference target\'),\n    )\n\n\n\n## after defining tables, uncomment below to enable auditing\n#~ auth.enable_record_versioning(db)\n\n\n\n'
p7
sS'snapshot'
p8
(dp9
S'exception'
p10
(dp11
S'__module__'
p12
S"'psycopg2'"
p13
sS'__getslice__'
p14
S"<method-wrapper '__getslice__' of DataError object>"
p15
sS'__str__'
p16
S"<method-wrapper '__str__' of DataError object>"
p17
sS'__reduce__'
p18
S'<built-in method __reduce__ of DataError object>'
p19
sS'__dict__'
p20
S'{}'
p21
sS'__sizeof__'
p22
S'<built-in method __sizeof__ of DataError object>'
p23
sS'__weakref__'
p24
S'None'
p25
sS'__init__'
p26
S"<method-wrapper '__init__' of DataError object>"
p27
sS'__setattr__'
p28
S"<method-wrapper '__setattr__' of DataError object>"
p29
sS'__reduce_ex__'
p30
S'<built-in method __reduce_ex__ of DataError object>'
p31
sS'__new__'
p32
S'<built-in method __new__ of type object>'
p33
sS'diag'
p34
S'<psycopg2.extensions.Diagnostics object>'
p35
sS'__format__'
p36
S'<built-in method __format__ of DataError object>'
p37
sS'__class__'
p38
S"<class 'psycopg2.DataError'>"
p39
sS'pgerror'
p40
S"'ERROR:  NUMERIC scale 5 must be between 0 and pr...E 12:     logp NUMERIC(2,5),\\n                  ^\\n'"
p41
sS'__doc__'
p42
S"'Error related to problems with the processed data.'"
p43
sS'__getitem__'
p44
S"<method-wrapper '__getitem__' of DataError object>"
p45
sS'__setstate__'
p46
S'<built-in method __setstate__ of DataError object>'
p47
sS'__getattribute__'
p48
S"<method-wrapper '__getattribute__' of DataError object>"
p49
sS'args'
p50
S"('NUMERIC scale 5 must be between 0 and precision ...E 12:     logp NUMERIC(2,5),\\n                  ^\\n',)"
p51
sS'__subclasshook__'
p52
S'<built-in method __subclasshook__ of type object>'
p53
sS'pgcode'
p54
S"'22023'"
p55
sS'__unicode__'
p56
S'<built-in method __unicode__ of DataError object>'
p57
sS'cursor'
p58
S'<cursor object at 0x7fbdd0127de0; closed: 0>'
p59
sS'__delattr__'
p60
S"<method-wrapper '__delattr__' of DataError object>"
p61
sS'__repr__'
p62
S"<method-wrapper '__repr__' of DataError object>"
p63
sS'__hash__'
p64
S"<method-wrapper '__hash__' of DataError object>"
p65
ssS'evalue'
p66
S'NUMERIC scale 5 must be between 0 and precision 2\nLINE 12:     logp NUMERIC(2,5),\n                  ^\n'
p67
sS'request'
p68
cgluon.html
XML_unpickle
p69
(S's\x88[\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top;">ajax</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">application</td><td style="vertical-align:top;">:</td><td><div>naturar</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">args</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cid</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">client</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">controller</td><td style="vertical-align:top;">:</td><td><div>compuestos</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cookies</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">session_id_admin</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-990e117a-2d57-45c6-aefd-cefa17ab5fce<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_naturar</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-0a7fd4a8-e325-4749-91a7-f7c8eb74fdb0<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_welcome</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-144595d1-6c84-40b8-8f31-55284c3fe1fb<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">env</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT</td><td style="vertical-align:top;">:</td><td><div>text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT_ENCODING</td><td style="vertical-align:top;">:</td><td><div>gzip, deflate, sdch</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT_LANGUAGE</td><td style="vertical-align:top;">:</td><td><div>es-ES,es;q=0.8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_CACHE_CONTROL</td><td style="vertical-align:top;">:</td><td><div>max-age=0</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_CONNECTION</td><td style="vertical-align:top;">:</td><td><div>keep-alive</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_COOKIE</td><td style="vertical-align:top;">:</td><td><div>session_id_welcome=127.0.0.1-144595d1-6c84-40b8-8f31-55284c3fe1fb; session_id_naturar=127.0.0.1-0a7fd4a8-e325-4749-91a7-f7c8eb74fdb0; session_id_admin=127.0.0.1-990e117a-2d57-45c6-aefd-cefa17ab5fce</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_HOST</td><td style="vertical-align:top;">:</td><td><div>127.0.1.1:8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_UPGRADE_INSECURE_REQUESTS</td><td style="vertical-align:top;">:</td><td><div>1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_USER_AGENT</td><td style="vertical-align:top;">:</td><td><div>Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/48.0.2564.97 Safari/537.36</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">PATH_INFO</td><td style="vertical-align:top;">:</td><td><div>/naturar/compuestos/buscar</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">QUERY_STRING</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REMOTE_ADDR</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REMOTE_PORT</td><td style="vertical-align:top;">:</td><td><div>40293</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REQUEST_METHOD</td><td style="vertical-align:top;">:</td><td><div>GET</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SCRIPT_NAME</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_NAME</td><td style="vertical-align:top;">:</td><td><div>Gandalf</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_PORT</td><td style="vertical-align:top;">:</td><td><div>8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_PROTOCOL</td><td style="vertical-align:top;">:</td><td><div>HTTP/1.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_SOFTWARE</td><td style="vertical-align:top;">:</td><td><div>Rocket 1.2.6</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">app_folders</td><td style="vertical-align:top;">:</td><td><div>set([&#x27;/home/www-data/web2py/applications/welcome/&#x27;, &#x27;/home/www-data/web2py/applications/naturar/&#x27;, &#x27;/home/www-data/web2py/applications/admin/&#x27;])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">applications_parent</td><td style="vertical-align:top;">:</td><td><div>/home/www-data/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_args</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_options</td><td style="vertical-align:top;">:</td><td><div>&lt;Values at 0x7fbe39ddbf38: {&#x27;verbose&#x27;: False, &#x27;ip&#x27;: &#x27;127.0.0.1&#x27;, &#x27;debuglevel&#x27;: 30, &#x27;with_scheduler&#x27;: False, &#x27;ips&#x27;: [&#x27;127.0.1.1&#x27;], &#x27;shutdown_timeout&#x27;: 5, &#x27;taskbar&#x27;: False, &#x27;with_coverage&#x27;: False, &#x27;scheduler_groups&#x27;: None, &#x27;port&#x27;: 8000, &#x27;maxthreads&#x27;: None, &#x27;softcron&#x27;: False, &#x27;server_name&#x27;: &#x27;Gandalf&#x27;, &#x27;bpython&#x27;: False, &#x27;nogui&#x27;: False, &#x27;pid_filename&#x27;: &#x27;httpserver.pid&#x27;, &#x27;print_errors&#x27;: False, &#x27;extcron&#x27;: False, &#x27;runcron&#x27;: False, &#x27;run_system_tests&#x27;: False, &#x27;test&#x27;: None, &#x27;folder&#x27;: &#x27;/home/www-data/web2py&#x27;, &#x27;config&#x27;: &#x27;&#x27;, &#x27;minthreads&#x27;: None, &#x27;shell&#x27;: None, &#x27;run&#x27;: &#x27;&#x27;, &#x27;log_filename&#x27;: &#x27;httpserver.log&#x27;, &#x27;profiler_dir&#x27;: None, &#x27;args&#x27;: [&#x27;&#x27;], &#x27;socket_timeout&#x27;: 5, &#x27;ssl_ca_certificate&#x27;: None, &#x27;scheduler&#x27;: None, &#x27;interfaces&#x27;: None, &#x27;ssl_private_key&#x27;: &#x27;&#x27;, &#x27;gae&#x27;: None, &#x27;password&#x27;: &#x27;&lt;ask&gt;&#x27;, &#x27;request_queue_size&#x27;: 5, &#x27;ssl_certificate&#x27;: &#x27;&#x27;, &#x27;cronjob&#x27;: False, &#x27;numthreads&#x27;: None, &#x27;quiet&#x27;: False, &#x27;import_models&#x27;: False, &#x27;timeout&#x27;: 10, &#x27;plain&#x27;: False, &#x27;nobanner&#x27;: False}&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">db_sessions</td><td style="vertical-align:top;">:</td><td><div>set([])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">debugging</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">gluon_parent</td><td style="vertical-align:top;">:</td><td><div>/home/www-data/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept</td><td style="vertical-align:top;">:</td><td><div>text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept_encoding</td><td style="vertical-align:top;">:</td><td><div>gzip, deflate, sdch</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept_language</td><td style="vertical-align:top;">:</td><td><div>es-ES,es;q=0.8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_cache_control</td><td style="vertical-align:top;">:</td><td><div>max-age=0</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_connection</td><td style="vertical-align:top;">:</td><td><div>keep-alive</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_cookie</td><td style="vertical-align:top;">:</td><td><div>session_id_welcome=127.0.0.1-144595d1-6c84-40b8-8f31-55284c3fe1fb; session_id_naturar=127.0.0.1-0a7fd4a8-e325-4749-91a7-f7c8eb74fdb0; session_id_admin=127.0.0.1-990e117a-2d57-45c6-aefd-cefa17ab5fce</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_host</td><td style="vertical-align:top;">:</td><td><div>127.0.1.1:8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_upgrade_insecure_requests</td><td style="vertical-align:top;">:</td><td><div>1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_user_agent</td><td style="vertical-align:top;">:</td><td><div>Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/48.0.2564.97 Safari/537.36</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_jython</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_pypy</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_source</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">local_hosts</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>::1</div></td></tr><tr><td><div>127.0.1.1</div></td></tr><tr><td><div>::ffff:127.0.0.1</div></td></tr><tr><td><div>127.0.0.1</div></td></tr><tr><td><div>Gandalf</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path_info</td><td style="vertical-align:top;">:</td><td><div>/naturar/compuestos/buscar</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">query_string</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">remote_addr</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">remote_port</td><td style="vertical-align:top;">:</td><td><div>40293</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">request_method</td><td style="vertical-align:top;">:</td><td><div>GET</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">request_uri</td><td style="vertical-align:top;">:</td><td><div>/naturar/compuestos/buscar</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">script_name</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_name</td><td style="vertical-align:top;">:</td><td><div>Gandalf</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_port</td><td style="vertical-align:top;">:</td><td><div>8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_protocol</td><td style="vertical-align:top;">:</td><td><div>HTTP/1.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_software</td><td style="vertical-align:top;">:</td><td><div>Rocket 1.2.6</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_path</td><td style="vertical-align:top;">:</td><td><div>/home/www-data/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_version</td><td style="vertical-align:top;">:</td><td><div>2.11.2-stable+timestamp.2015.05.30.16.33.24</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.errors</td><td style="vertical-align:top;">:</td><td><div>&lt;open file &#x27;&lt;stderr&gt;&#x27;, mode &#x27;w&#x27; at 0x7fbe4606b1e0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.file_wrapper</td><td style="vertical-align:top;">:</td><td><div>&lt;class wsgiref.util.FileWrapper at 0x7fbe3a0774c8&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.input</td><td style="vertical-align:top;">:</td><td><div>&lt;socket._fileobject object at 0x7fbe381867d0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.multiprocess</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.multithread</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.run_once</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.url_scheme</td><td style="vertical-align:top;">:</td><td><div>http</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.version</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>1</div></td></tr><tr><td><div>0</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_errors</td><td style="vertical-align:top;">:</td><td><div>&lt;open file &#x27;&lt;stderr&gt;&#x27;, mode &#x27;w&#x27; at 0x7fbe4606b1e0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_file_wrapper</td><td style="vertical-align:top;">:</td><td><div>&lt;class wsgiref.util.FileWrapper at 0x7fbe3a0774c8&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_input</td><td style="vertical-align:top;">:</td><td><div>&lt;socket._fileobject object at 0x7fbe381867d0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_multiprocess</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_multithread</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_run_once</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_url_scheme</td><td style="vertical-align:top;">:</td><td><div>http</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_version</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>1</div></td></tr><tr><td><div>0</div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">extension</td><td style="vertical-align:top;">:</td><td><div>html</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">folder</td><td style="vertical-align:top;">:</td><td><div>/home/www-data/web2py/applications/naturar/</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">function</td><td style="vertical-align:top;">:</td><td><div>buscar</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">global_settings</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">app_folders</td><td style="vertical-align:top;">:</td><td><div>set([&#x27;/home/www-data/web2py/applications/welcome/&#x27;, &#x27;/home/www-data/web2py/applications/naturar/&#x27;, &#x27;/home/www-data/web2py/applications/admin/&#x27;])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">applications_parent</td><td style="vertical-align:top;">:</td><td><div>/home/www-data/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_args</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_options</td><td style="vertical-align:top;">:</td><td><div>&lt;Values at 0x7fbe39ddbf38: {&#x27;verbose&#x27;: False, &#x27;ip&#x27;: &#x27;127.0.0.1&#x27;, &#x27;debuglevel&#x27;: 30, &#x27;with_scheduler&#x27;: False, &#x27;ips&#x27;: [&#x27;127.0.1.1&#x27;], &#x27;shutdown_timeout&#x27;: 5, &#x27;taskbar&#x27;: False, &#x27;with_coverage&#x27;: False, &#x27;scheduler_groups&#x27;: None, &#x27;port&#x27;: 8000, &#x27;maxthreads&#x27;: None, &#x27;softcron&#x27;: False, &#x27;server_name&#x27;: &#x27;Gandalf&#x27;, &#x27;bpython&#x27;: False, &#x27;nogui&#x27;: False, &#x27;pid_filename&#x27;: &#x27;httpserver.pid&#x27;, &#x27;print_errors&#x27;: False, &#x27;extcron&#x27;: False, &#x27;runcron&#x27;: False, &#x27;run_system_tests&#x27;: False, &#x27;test&#x27;: None, &#x27;folder&#x27;: &#x27;/home/www-data/web2py&#x27;, &#x27;config&#x27;: &#x27;&#x27;, &#x27;minthreads&#x27;: None, &#x27;shell&#x27;: None, &#x27;run&#x27;: &#x27;&#x27;, &#x27;log_filename&#x27;: &#x27;httpserver.log&#x27;, &#x27;profiler_dir&#x27;: None, &#x27;args&#x27;: [&#x27;&#x27;], &#x27;socket_timeout&#x27;: 5, &#x27;ssl_ca_certificate&#x27;: None, &#x27;scheduler&#x27;: None, &#x27;interfaces&#x27;: None, &#x27;ssl_private_key&#x27;: &#x27;&#x27;, &#x27;gae&#x27;: None, &#x27;password&#x27;: &#x27;&lt;ask&gt;&#x27;, &#x27;request_queue_size&#x27;: 5, &#x27;ssl_certificate&#x27;: &#x27;&#x27;, &#x27;cronjob&#x27;: False, &#x27;numthreads&#x27;: None, &#x27;quiet&#x27;: False, &#x27;import_models&#x27;: False, &#x27;timeout&#x27;: 10, &#x27;plain&#x27;: False, &#x27;nobanner&#x27;: False}&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">db_sessions</td><td style="vertical-align:top;">:</td><td><div>set([])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">debugging</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">gluon_parent</td><td style="vertical-align:top;">:</td><td><div>/home/www-data/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_jython</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_pypy</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_source</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">local_hosts</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>::1</div></td></tr><tr><td><div>127.0.1.1</div></td></tr><tr><td><div>::ffff:127.0.0.1</div></td></tr><tr><td><div>127.0.0.1</div></td></tr><tr><td><div>Gandalf</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_version</td><td style="vertical-align:top;">:</td><td><div>2.11.2-stable+timestamp.2015.05.30.16.33.24</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_https</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_local</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_restful</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_sheduler</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_shell</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">now</td><td style="vertical-align:top;">:</td><td><div>datetime.datetime(2016, 2, 12, 16, 25, 2, 948339)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">raw_args</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">raw_extension</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">url</td><td style="vertical-align:top;">:</td><td><div>/naturar/compuestos/buscar</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">utcnow</td><td style="vertical-align:top;">:</td><td><div>datetime.datetime(2016, 2, 12, 19, 25, 2, 948361)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi</td><td style="vertical-align:top;">:</td><td><div>&lt;gluon.main.LazyWSGI object at 0x7fbdbffc2bd0&gt;</div></td></tr></table></div>'
tRp70
sS'frames'
p71
(lp72
(dp73
S'file'
p74
S'/home/www-data/web2py/gluon/restricted.py'
p75
sS'dump'
p76
(dp77
S'environment'
p78
S"{'A': <class 'gluon.html.A'>, 'ANY_OF': <class 'gluon.validators.ANY_OF'>, 'ASSIGNJS': <function ASSIGNJS>, 'AppConfig': <function AppConfig>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, ...}"
p79
sS'ccode'
p80
S'<code object <module> at 0x7fbdd00e5eb0, file "/...b2py/applications/naturar/models/db.py", line 13>'
p81
ssS'lnum'
p82
I227
sS'lines'
p83
(dp84
I224
S'            ccode = code'
p85
sI225
S'        else:'
p86
sI226
S'            ccode = compile2(code, layer)'
p87
sI227
S'        exec ccode in environment'
p88
sI228
S'    except HTTP:'
p89
sI229
S'        raise'
p90
sI230
S'    except RestrictedError:'
p91
sI231
S'        # do not encapsulate (obfuscate) the original RestrictedError'
p92
sI222
S'    try:'
p93
sI223
S'        if isinstance(code, types.CodeType):'
p94
ssS'call'
p95
S"(code='# -*- coding: utf-8 -*-\\n\\n#######################...auditing\\n#~ auth.enable_record_versioning(db)\\n\\n\\n\\n', environment={'A': <class 'gluon.html.A'>, 'ANY_OF': <class 'gluon.validators.ANY_OF'>, 'ASSIGNJS': <function ASSIGNJS>, 'AppConfig': <function AppConfig>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, ...}, layer='/home/www-data/web2py/applications/naturar/models/db.py')"
p96
sS'func'
p97
S'restricted'
p98
sa(dp99
g74
S'/home/www-data/web2py/applications/naturar/models/db.py'
p100
sg76
(dp101
S'Field'
p102
S"<class 'pydal.objects.Field'>"
p103
sS'builtintype'
p104
S"<type 'type'>"
p105
ssg82
I329
sg83
(dp106
I324
S"    Field('numrotatable', type='integer'),"
p107
sI325
S"    Field('numring', type='integer'),"
p108
sI326
S"    Field('numn', type='integer'),"
p109
sI327
S"    Field('numo', type='integer'),"
p110
sI328
S"    Field('nums', type='integer'),"
p111
sI329
S"    Field('numro5violation', type='integer'),"
p112
sI330
S'    )'
p113
sI331
S''
sI332
S"'''"
p114
sI333
S'List of extra properties'
p115
ssg95
S'()'
p116
sg97
S'<module>'
p117
sa(dp118
g74
S'/home/www-data/web2py/gluon/packages/dal/pydal/base.py'
p119
sg76
(dp120
S'fields'
p121
S'(<Table auth_signature (id,is_active,created_on,created_by,modified_on,modified_by)>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>)'
p122
sS'self'
p123
S'<DAL uri="postgres:******@localhost/naturardb">'
p124
sS'args'
p125
g21
sS'tablename'
p126
S"'compoundproperty'"
p127
sS'table'
p128
S'undefined'
p129
sS'self.lazy_define_table'
p130
S'<bound method DAL.lazy_define_table of <DAL uri="postgres:******@localhost/naturardb">>'
p131
ssg82
I819
sg83
(dp132
I814
S'                    % (tablename,invalid_args))'
p133
sI815
S'        if self._lazy_tables and tablename not in self._LAZY_TABLES:'
p134
sI816
S'            self._LAZY_TABLES[tablename] = (tablename,fields,args)'
p135
sI817
S'            table = None'
p136
sI818
S'        else:'
p137
sI819
S'            table = self.lazy_define_table(tablename,*fields,**args)'
p138
sI820
S'        if not tablename in self.tables:'
p139
sI821
S'            self.tables.append(tablename)'
p140
sI822
S'        return table'
p141
sI823
S''
ssg95
S'(self=<DAL uri="postgres:******@localhost/naturardb">, tablename=\'compoundproperty\', *fields=(<Table auth_signature (id,is_active,created_on,created_by,modified_on,modified_by)>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>), **args={})'
p142
sg97
S'define_table'
p143
sa(dp144
g74
S'/home/www-data/web2py/gluon/packages/dal/pydal/base.py'
p145
sg76
(dp146
S'polymodel'
p147
S'None'
p148
ssg82
I858
sg83
(dp149
I853
S'            try:'
p150
sI854
S'                GLOBAL_LOCKER.acquire()'
p151
sI855
S'                self._lastsql = self._adapter.create_table('
p152
sI856
S'                    table,migrate=migrate,'
p153
sI857
S'                    fake_migrate=fake_migrate,'
p154
sI858
S'                    polymodel=polymodel)'
p155
sI859
S'            finally:'
p156
sI860
S'                GLOBAL_LOCKER.release()'
p157
sI861
S'        else:'
p158
sI862
S'            table._dbt = None'
p159
ssg95
S'(self=<DAL uri="postgres:******@localhost/naturardb">, tablename=\'compoundproperty\', *fields=(<Table auth_signature (id,is_active,created_on,created_by,modified_on,modified_by)>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>), **args={})'
p160
sg97
S'lazy_define_table'
p161
sa(dp162
g74
S'/home/www-data/web2py/gluon/packages/dal/pydal/adapters/base.py'
p163
sg76
(dp164
S'query'
p165
S"'CREATE TABLE compoundproperty(\\n    id SERIAL PRI...\\n    nums INTEGER,\\n    numro5violation INTEGER\\n);'"
p166
sS'self'
p167
S'<pydal.adapters.postgres.PostgreSQLAdapter object>'
p168
sS'table'
p169
S'<Table compoundproperty (id,is_active,created_on...otatable,numring,numn,numo,nums,numro5violation)>'
p170
sS'self.create_sequence_and_triggers'
p171
S'<bound method PostgreSQLAdapter.create_sequence_...ydal.adapters.postgres.PostgreSQLAdapter object>>'
p172
ssg82
I467
sg83
(dp173
I462
S'            if table._dbt:'
p174
sI463
S"                self.log('timestamp: %s\\n%s\\n'"
p175
sI464
S'                         % (datetime.datetime.today().isoformat(),'
p176
sI465
S'                            query), table)'
p177
sI466
S'            if not fake_migrate:'
p178
sI467
S'                self.create_sequence_and_triggers(query,table)'
p179
sI468
S'                table._db.commit()'
p180
sI469
S'                # Postgres geom fields are added now,'
p181
sI470
S'                # after the table has been created'
p182
sI471
S'                for query in postcreation_fields:'
p183
ssg95
S'(self=<pydal.adapters.postgres.PostgreSQLAdapter object>, table=<Table compoundproperty (id,is_active,created_on...otatable,numring,numn,numo,nums,numro5violation)>, migrate=True, fake_migrate=False, polymodel=None)'
p184
sg97
S'create_table'
p185
sa(dp186
g74
S'/home/www-data/web2py/gluon/packages/dal/pydal/adapters/postgres.py'
p187
sg76
(dp188
S'query'
p189
S"'CREATE TABLE compoundproperty(\\n    id SERIAL PRI...\\n    nums INTEGER,\\n    numro5violation INTEGER\\n);'"
p190
sS'self'
p191
S'<pydal.adapters.postgres.PostgreSQLAdapter object>'
p192
sS'self.execute'
p193
S'<bound method PostgreSQLAdapter.execute of <pydal.adapters.postgres.PostgreSQLAdapter object>>'
p194
ssg82
I92
sg83
(dp195
I96
S"    def __init__(self, db,uri, pool_size=0, folder=None, db_codec ='UTF-8',"
p196
sI87
S'    def create_sequence_and_triggers(self, query, table, **args):'
p197
sI88
S'        # following lines should only be executed if table._sequence_name does not exist'
p198
sI89
S"        # self.execute('CREATE SEQUENCE %s;' % table._sequence_name)"
p199
sI90
S'        # self.execute("ALTER TABLE %s ALTER COLUMN %s SET DEFAULT NEXTVAL(\'%s\');" \\'
p200
sI91
S'        #              % (table._tablename, table._fieldname, table._sequence_name))'
p201
sI92
S'        self.execute(query)'
p202
sI93
S''
sI94
S"    REGEX_URI = re.compile('^(?P<user>[^:@]+)(\\:(?P<password>[^@]*))?@(?P<host>[^\\:@]+)(\\:(?P<port>[0-9]+))?/(?P<db>[^\\?]+)(\\?sslmode=(?P<sslmode>.+))?$')"
p203
sI95
S''
ssg95
S"(self=<pydal.adapters.postgres.PostgreSQLAdapter object>, query='CREATE TABLE compoundproperty(\\n    id SERIAL PRI...\\n    nums INTEGER,\\n    numro5violation INTEGER\\n);', table=<Table compoundproperty (id,is_active,created_on...otatable,numring,numn,numo,nums,numro5violation)>, **args={})"
p204
sg97
S'create_sequence_and_triggers'
p205
sa(dp206
g74
S'/home/www-data/web2py/gluon/packages/dal/pydal/adapters/base.py'
p207
sg76
(dp208
S'a'
S"('CREATE TABLE compoundproperty(\\n    id SERIAL PRI...\\n    nums INTEGER,\\n    numro5violation INTEGER\\n);',)"
p209
sS'self'
p210
S'<pydal.adapters.postgres.PostgreSQLAdapter object>'
p211
sS'b'
g21
sS'self.log_execute'
p212
S'<bound method PostgreSQLAdapter.log_execute of <pydal.adapters.postgres.PostgreSQLAdapter object>>'
p213
ssg82
I1350
sg83
(dp214
I1345
S'        self.db._timings.append((command,time.time()-t0))'
p215
sI1346
S'        del self.db._timings[:-TIMINGSSIZE]'
p216
sI1347
S'        return ret'
p217
sI1348
S''
sI1349
S'    def execute(self, *a, **b):'
p218
sI1350
S'        return self.log_execute(*a, **b)'
p219
sI1351
S''
sI1352
S'    def represent(self, obj, fieldtype):'
p220
sI1353
S'        field_is_type = fieldtype.startswith'
p221
sI1354
S'        if isinstance(obj, CALLABLETYPES):'
p222
ssg95
S"(self=<pydal.adapters.postgres.PostgreSQLAdapter object>, *a=('CREATE TABLE compoundproperty(\\n    id SERIAL PRI...\\n    nums INTEGER,\\n    numro5violation INTEGER\\n);',), **b={})"
p223
sg97
S'execute'
p224
sa(dp225
g74
S'/home/www-data/web2py/gluon/packages/dal/pydal/adapters/base.py'
p226
sg76
(dp227
S'a'
S"('CREATE TABLE compoundproperty(\\n    id SERIAL PRI...\\n    nums INTEGER,\\n    numro5violation INTEGER\\n);',)"
p228
sS'b'
g21
sS'self'
p229
S'<pydal.adapters.postgres.PostgreSQLAdapter object>'
p230
sS'ret'
p231
g129
sS'self.cursor'
p232
S'<cursor object at 0x7fbdd0127de0; closed: 0>'
p233
sS'command'
p234
S"'CREATE TABLE compoundproperty(\\n    id SERIAL PRI...\\n    nums INTEGER,\\n    numro5violation INTEGER\\n);'"
p235
sS'self.cursor.execute'
p236
S'<built-in method execute of psycopg2.extensions.cursor object>'
p237
ssg82
I1344
sg83
(dp238
I1344
S'        ret = self.cursor.execute(command, *a[1:], **b)'
p239
sI1345
S'        self.db._timings.append((command,time.time()-t0))'
p240
sI1346
S'        del self.db._timings[:-TIMINGSSIZE]'
p241
sI1347
S'        return ret'
p242
sI1348
S''
sI1339
S'            command = self.filter_sql_command(command)'
p243
sI1340
S'        if self.db._debug:'
p244
sI1341
S"            self.db.logger.debug('SQL: %s' % command)"
p245
sI1342
S'        self.db._lastsql = command'
p246
sI1343
S'        t0 = time.time()'
p247
ssg95
S"(self=<pydal.adapters.postgres.PostgreSQLAdapter object>, *a=('CREATE TABLE compoundproperty(\\n    id SERIAL PRI...\\n    nums INTEGER,\\n    numro5violation INTEGER\\n);',), **b={})"
p248
sg97
S'log_execute'
p249
sasS'pyver'
p250
S'Python 2.7.6: /usr/bin/python (prefix: /usr)'
p251
sS'session'
p252
g69
(S's?\x01\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top;">last_orderby</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">last_query</td><td style="vertical-align:top;">:</td><td><div>db.classification.id&gt;0</div></td></tr></table></div>'
tRp253
sS'etype'
p254
S"<class 'psycopg2.DataError'>"
p255
sS'date'
p256
S'Fri Feb 12 16:25:03 2016'
p257
sS'response'
p258
g69
(S's\x02\x18\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top;">body</td><td style="vertical-align:top;">:</td><td><div>&lt;cStringIO.StringO object at 0x7fbdb9e58570&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cookies</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">session_id_naturar</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-0a7fd4a8-e325-4749-91a7-f7c8eb74fdb0<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div>/</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">delimiters</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>{{</div></td></tr><tr><td><div>}}</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">files</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">flash</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">form_label_separator</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">formstyle</td><td style="vertical-align:top;">:</td><td><div>bootstrap3_inline</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">generic_patterns</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>*</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">headers</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">X-Powered-By</td><td style="vertical-align:top;">:</td><td><div>web2py</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">menu</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">meta</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">models_to_run</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>^\\w+\\.py$</div></td></tr><tr><td><div>^compuestos/\\w+\\.py$</div></td></tr><tr><td><div>^compuestos/buscar/\\w+\\.py$</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">postprocessing</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_client</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_cookie_compression_level</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_cookie_expires</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_cookie_key</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_data_name</td><td style="vertical-align:top;">:</td><td><div>session_data_naturar</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_file</td><td style="vertical-align:top;">:</td><td><div>&lt;open file &#x27;/home/www-data/web2py/applications/naturar/sessions/0cc/0f1/127.0.0.1-0a7fd4a8-e325-4749-91a7-f7c8eb74fdb0&#x27;, mode &#x27;rb+&#x27; at 0x7fbdb829af60&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_filename</td><td style="vertical-align:top;">:</td><td><div>/home/www-data/web2py/applications/naturar/sessions/127.0.0.1-0a7fd4a8-e325-4749-91a7-f7c8eb74fdb0</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_hash</td><td style="vertical-align:top;">:</td><td><div>9e6677978599fa2b5c994061b53ac9d9</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-0a7fd4a8-e325-4749-91a7-f7c8eb74fdb0</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_name</td><td style="vertical-align:top;">:</td><td><div>session_id_naturar</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_locked</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_masterapp</td><td style="vertical-align:top;">:</td><td><div>naturar</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_new</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_storage_type</td><td style="vertical-align:top;">:</td><td><div>file</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">status</td><td style="vertical-align:top;">:</td><td><div>200</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">view</td><td style="vertical-align:top;">:</td><td><div>compuestos/buscar.html</div></td></tr></table></div>'
tRp259
sS'locals'
p260
(dp261
S'a'
S"('CREATE TABLE compoundproperty(\\n    id SERIAL PRI...\\n    nums INTEGER,\\n    numro5violation INTEGER\\n);',)"
p262
sS'self'
p263
S'<pydal.adapters.postgres.PostgreSQLAdapter object>'
p264
sS'b'
g21
sS'command'
p265
S"'CREATE TABLE compoundproperty(\\n    id SERIAL PRI...\\n    nums INTEGER,\\n    numro5violation INTEGER\\n);'"
p266
sS't0'
p267
S'1455305103.030881'
p268
sssS'traceback'
p269
S'Traceback (most recent call last):\n  File "/home/www-data/web2py/gluon/restricted.py", line 227, in restricted\n    exec ccode in environment\n  File "/home/www-data/web2py/applications/naturar/models/db.py", line 329, in <module>\n    Field(\'numro5violation\', type=\'integer\'),\n  File "/home/www-data/web2py/gluon/packages/dal/pydal/base.py", line 819, in define_table\n    table = self.lazy_define_table(tablename,*fields,**args)\n  File "/home/www-data/web2py/gluon/packages/dal/pydal/base.py", line 858, in lazy_define_table\n    polymodel=polymodel)\n  File "/home/www-data/web2py/gluon/packages/dal/pydal/adapters/base.py", line 467, in create_table\n    self.create_sequence_and_triggers(query,table)\n  File "/home/www-data/web2py/gluon/packages/dal/pydal/adapters/postgres.py", line 92, in create_sequence_and_triggers\n    self.execute(query)\n  File "/home/www-data/web2py/gluon/packages/dal/pydal/adapters/base.py", line 1350, in execute\n    return self.log_execute(*a, **b)\n  File "/home/www-data/web2py/gluon/packages/dal/pydal/adapters/base.py", line 1344, in log_execute\n    ret = self.cursor.execute(command, *a[1:], **b)\nDataError: NUMERIC scale 5 must be between 0 and precision 2\nLINE 12:     logp NUMERIC(2,5),\n                  ^\n\n'
p270
s.