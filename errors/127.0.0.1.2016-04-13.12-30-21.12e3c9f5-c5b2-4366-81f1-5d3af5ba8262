(dp1
S'output'
p2
S"<class 'Boost.Python.ArgumentError'> Python argument types in\n    rdkit.Chem.rdmolfiles.MolFromMolFile(cStringIO.StringO)\ndid not match C++ signature:\n    MolFromMolFile(char const* molFileName, bool sanitize=True, bool removeHs=True, bool strictParsing=True)\n    MolFromMolFile(char const* molFileName, bool sanitize=True, bool removeHs=True, bool strictParsing=True)"
p3
sS'layer'
p4
S'/home/mjl/Dropbox/FITOMEDICINA/web2py/applications/naturar/controllers/compuestos.py'
p5
sS'code'
p6
S'# -*- coding: utf-8 -*-\n# this file is released under public domain and you can use without limitations\n\n#########################################################################\n## This is a sample controller\n## - index is the default action of any application\n## - user is required for authentication and authorization\n## - download is for downloading files uploaded in the db (does streaming)\n#########################################################################\nfrom rdkit import Chem\nfrom rdkit.Chem import Draw\nfrom rdkit.Chem import AllChem\nimport os.path \n\n#~ def list_molecules():\n    #~ """\n    #~ show compound like a image grid\n    #~ """\n    #~ if len(request.args): page=int(request.args[0])\n    #~ else: page=0\n    #~ items_per_page=5\n    #~ limitby=(page*items_per_page,(page+1)*items_per_page+1)\n    #~ rows=db().select(db.compound.ALL,limitby=limitby)\n    #~ return dict(rows=rows,page=page,items_per_page=items_per_page)\n\n\ndef list_molecules2():\n    grid = SQLFORM.smartgrid(db.compound, paginate=5)\n    return locals()\n\n#~ @auth.requires_membership(\'managers\')\ndef buscar():\n    """\n    action to show a list of compounds\n    """\n    imagewidth = 70\n    imageheight = 70\n    request.is_local =False\n    #extract of http://stackoverflow.com/questions/21447804/web2py-sqlform-grid-edit-page\n    db.compound.id.readable = False\n    db.compound.id.writeable = False\n \n\n    form = SQLFORM.grid(\n        query=db.compound,\n        formname="compound",\n        editable = auth.has_membership(\'managers\'),\n        deletable = auth.has_membership(\'managers\'),\n        buttons_placement = \'left\',\n        paginate = 5,\n        searchable= dict(smiles=True, extract=False),\n        links=[dict(header=T(\'Image\'), body = lambda row: \n        DIV(A(IMG(_src=URL(\'static\',row.imagepath), \n        _width=imagewidth, _height=imageheight),_href="localhost"),_class="img-zoom"))])\n        \n   \n   \n    #if "view" in request.args(0)request.env.request_uri:\n    #~ try:\n    if request.args(0):\n        if "view" in request.args(0):\n            record_id = form.view_form.record_id \n            # Properties selection\n            table = db(db.compound_property.compound_id==record_id).select(\n                db.compoundproperty.molecular_weight,\n                db.compoundproperty.molecular_formula,\n                db.compoundproperty.molecular_volume,\n                db.compoundproperty.smiles,\n                db.compoundproperty.clogp,\n                db.compoundproperty.xlogp,\n                db.compoundproperty.tpsa,\n                db.compoundproperty.hbd,\n                db.compoundproperty.hba,\n                db.compoundproperty.num_rotatables_bonds,\n                db.compoundproperty.aromatic_rings,\n                db.compoundproperty.num_n,\n                db.compoundproperty.num_o,\n                db.compoundproperty.num_s,\n                db.compoundproperty.num_ro5_violations,\n            )        \n            properties = rows_transpose(table)\n            \n            # Docs selection\n            docs_id = db(db.compound.id==record_id).select(db.compound.docs)\n            try:\n                table = db(db.doc.id.belongs(docs_id.first().docs)).select(\n                    db.doc.journal,\n                    db.doc.year,\n                    db.doc.volume,\n                    db.doc.issue,\n                    db.doc.first_page,\n                    db.doc.last_page,\n                    db.doc.doi,\n                    db.doc.pubmed_id,\n                    db.doc.title,\n                    db.doc.doc_type,\n                    db.doc.authors,\n                    db.doc.abstract,\n                )            \n                docs = rows_transpose(table)\n            except:\n                docs=None\n\n    else:\n        properties = ""\n        docs = ""\n    \n    \n    print doi2doc("10.1016/j.molstruc.2014.10.054")[\'message\'][\'author\']\n   \n    return dict(form=form, properties=properties, docs=docs)\n    \ndef buscar2():\n    """\n    action to show a list of compounds\n    """\n    imagewidth = 70\n    imageheight = 70\n    request.is_local =False\n    #extract of http://stackoverflow.com/questions/21447804/web2py-sqlform-grid-edit-page\n    db.compound.id.readable = False\n    db.compound.id.writeable = False\n \n\n    form = SQLFORM.smartgrid(db.compound,\n        #~ left=db.extract_record.extract_name(db.extract_record.id==db.compound.extract),\n        editable = auth.has_membership(\'managers\'),\n        deletable = auth.has_membership(\'managers\'),\n        buttons_placement = \'left\',\n        paginate = 5,\n        searchable= dict(smiles=True, extract=False),\n        #~ links=[dict(header=T(\'Image\'), body = lambda row: \n        #~ DIV(A(IMG(_src=URL(\'static\',row.imagepath), \n        #~ _width=imagewidth, _height=imageheight),_href="localhost"),_class="img-zoom"))]\n        )\n               \n\n    print calculate_descriptors("NN")\n   \n    return dict(form=form)    \n    \n\ndef custom_search():\n    \'\'\'\n    Implements SQLFORM.grid custom search \n        WITHOUT specifying a custom search_widget,\n            and so needing to read & understand the clever web2py implementation source code.\n    The custom_search.html view contains the EASIER TO UNDERSTAND customization code.\n    The technique:\n        1. Make the grid\'s Standard Search Input hidden.\n        2. Define Custom Search Input elements \n            with onchange events that \n                send their values to the to the hidden Standard Search Input.\n    \'\'\'\n    query=((db.compound.id > 0))\n    fields = (db.compound.id, \n        db.compound.smiles, \n        db.compound.name, \n        )\n \n    headers = {\'compound.id\':   \'ID\',\n           \'compound.smiles\': \'Last Name\',\n           \'db.compound.name\': \'Primary Phone\',\n           }    \n    init_sort_order=[db.compound.name]   \n \n    grid = SQLFORM.grid(query=query, \n        fields=fields, \n        headers=headers, \n        orderby=init_sort_order,\n        searchable=True,  \n        user_signature=False, \n        create=True, deletable=False, editable=True, maxtextlength=100, paginate=25)\n \n    return dict(grid=grid)  \n\n\n\n\ndef manage_packages():\n    if request.args(0) == \'new\' and request.args(1) == \'compound\':\n\n        # (1) Get available docs\n        docs = [(r.id, r.title) for r in db(db.doc).select()]\n        print docs\n\n        # (2) Build the form\n        form = SQLFORM.factory(\n            db.compound,\n            Field(\'doc\',\n                requires=IS_IN_SET(docs, multiple=True)\n            )\n        )\n\n        # (3) Validate form data\n        if form.process().accepted:\n\n            # (4) Insert compound\n            compound_id = db.compound.insert(\n                **db.compound._filter_fields(form.vars))\n\n            if compound_id and form.vars.docs:\n\n                # (5) Insert component package associations\n                for doc_id in form.vars.docs:\n                    existing_doc = db.doc(doc_id)\n\n                    if existing_doc:\n                        db.r_compound_doc.insert(\n                            compound_id=compound_id,\n                            doc_id=existing_doc\n                        )\n\n                response.flash = \'Package has been created successfully.\'\n\n        content = form\n    else:\n        content = SQLFORM.grid(db.compound)\n\n    return dict(content=content)\n\n\n\ndef two_forms():\n    \n    form1 = FORM(INPUT(_name=\'form_one\', requires=IS_NOT_EMPTY()),\n               INPUT(_type=\'submit\'))\n    form2 = FORM(INPUT(_name=\'form_two\', requires=IS_NOT_EMPTY()),\n               INPUT(_type=\'submit\'))\n    form3 = SQLFORM.grid(query=db.compound,\n        formname="compound_doc")\n\n    if form1.process(formname=\'form_one\').accepted:\n        response.flash = \'form one accepted\'\n    if form2.process(formname=\'form_two\').accepted:\n        response.flash = \'form two accepted\'\n    return dict(form1=form1, form2=form2, form3=form3)\n    \n    \ndef upload():\n     # (1) Get available components\n    compounds = [(r.id, r.compoundname) for r in db(db.compound).select()]\n\n    # (2) Build the form\n    form = SQLFORM.factory(\n        db.classification,\n        Field(\n            \'compounds\',\n            requires=IS_IN_SET(compounds, multiple=True)\n        )\n    )\n    print compounds\n\n    # (3) Validate form data\n    if form.process().accepted:\n\n        # (4) Insert package\n        classification_id = db.classification.insert(\n            **db.classification._filter_fields(form.vars))\n\n        if classification_id and form.vars.compounds:\n\n            # (5) Insert component package associations\n            for compound_id in form.vars.compounds:\n                existing_compound = db.compound(compound_id)\n\n                if existing_compound:\n                    db.compound_classification.insert(\n                        classification_id=classification_id,\n                        compound_id=existing_compound\n                    )\n\n            response.flash = \'Package has been created successfully.\'\n\n    content = form\n    #~ else:\n        #~ content = SQLFORM.grid(db.classification)\n\n    return dict(content=content)\n    \ndef upload2():\n     # (1) Get available classifications\n    classifications = [(r.id, r.classificationname) for r in db(db.classification).select()]\n    chemicalclasses = [(r.id, r.classname_en) for r in db(db.chemicalclass).select()]\n    #~ extracts = [(r.id, r.extractname) for r in db(db.chemicalclass).select()]\n\n    # (2) Build the form\n    form = SQLFORM.factory(\n        db.compound,\n        Field(\'classifications\',\n            requires=IS_IN_SET(classifications, multiple=True)),\n        Field(\'chemicalclasses\',\n            requires=IS_IN_SET(chemicalclasses, multiple=True)),\n        Field(\'synonyms\', type=\'text\', requires=IS_NOT_EMPTY()),\n    )\n    # (3) Validate form data\n    if form.process().accepted:\n\n        # (4) Insert compound\n        compound_id = db.compound.insert(\n            **db.compound._filter_fields(form.vars))\n        \n        # (5) Insert compound_classification associations\n        if compound_id and form.vars.classifications:\n            for classification_id in form.vars.classifications:\n                existing_classification = db.classification(classification_id)\n                if existing_classification:\n                    db.compound_classification.insert(\n                        compound_id=compound_id,\n                        classification_id=existing_classification)\n                        \n        # (6) Insert compound_chemicalclass associations\n            \n        if compound_id and form.vars.chemicalclasses:\n            for chemicalclass_id in form.vars.chemicalclasses:\n                existing_chemicalclass = db.chemicalclass(chemicalclass_id)\n                if existing_chemicalclass:\n                    db.compound_chemicalclass.insert(\n                        compound_id=compound_id,\n                        chemicalclass_id=existing_chemicalclass)\n                        \n        # (7) Insert synonyms\n        if compound_id and form.vars.synonyms:\n            synonymlist = form.vars.synonyms.split(\'\\n\')\n            for synonym in synonymlist:\n                db.synonym.insert(\n                    compound_id=compound_id,\n                    synonymname=str(synonym).strip(\'\\r\'))\n                        \n\n        response.flash = T(\'Compound has been uploaded successfully.\')\n\n    content = form\n    #~ else:\n        #~ content = SQLFORM.grid(db.compound)\n\n    return dict(content=content)\n\n\n\n\ndef upload_molprocessing(form):\n        print form.vars.molstructure.file.read() \n        print "paso bis"\n        if form.vars.molstructure != None:\n            print is_valid_ctab(form.vars.molstructure.file.read())\n            inputmolrdkit = Chem.MolFromMolFile(form.vars.molstructure.file)\n            #~ inputmolfile = os.path.join(request.folder,\'static/temp/\') + form.vars.molstructure\n            print "paso"\n            pass\n        elif form.vars.isosmiles:\n            if is_valid_smiles(form.vars.isosmiles)==True:\n                pass\n            else: \n                form.errors.isosmiles = T(\'SMILES has an error, please check\')\n        else:\n            form.errors.isosmiles = T(\'You must introduce an structure using an smiles or uploading a file\')  \n\ndef upload3():\n     # (1) Get available classifications\n    classifications = [(r.id, r.classificationname) for r in db(db.classification).select()]\n    chemicalclasses = [(r.id, r.classname_en) for r in db(db.chemicalclass).select()]\n    #~ extracts = [(r.id, r.extractname) for r in db(db.chemicalclass).select()]\n\n    # (2) Build the form\n    form = SQLFORM.factory(\n        Field(\'molstructure\', type=\'upload\', uploadfolder=os.path.join(request.folder,\'static/temp\'), \n        requires = IS_UPLOAD_FILENAME(extension=\'mol\')),\n        db.compound,\n        Field(\'classifications\',\n            requires=IS_IN_SET(classifications, multiple=True)),\n        Field(\'chemicalclasses\',\n            requires=IS_IN_SET(chemicalclasses, multiple=True)),\n        #~ Field(\'inputselector\',requires=IS_IN_SET([\'Smile\',\'Draw\',\'File\']),widget=SQLFORM.widgets.radio.widget),\n        Field(\'synonyms\', type=\'list:string\', requires=IS_NOT_EMPTY()),\n    )\n    \n    # (3) Validate form data\n    if form.process(onvalidation=upload_molprocessing).accepted:\n\n        # (4) Insert compound\n        compound_id = db.compound.insert(\n            **db.compound._filter_fields(form.vars))\n        \n        # (5) Insert compound_classification associations\n        if compound_id and form.vars.classifications:\n            for classification_id in form.vars.classifications:\n                existing_classification = db.classification(classification_id)\n                if existing_classification:\n                    db.compound_classification.insert(\n                        compound_id=compound_id,\n                        classification_id=existing_classification)\n                        \n        # (6) Insert compound_chemicalclass associations\n        if compound_id and form.vars.chemicalclasses:\n            for chemicalclass_id in form.vars.chemicalclasses:\n                existing_chemicalclass = db.chemicalclass(chemicalclass_id)\n                if existing_chemicalclass:\n                    db.compound_chemicalclass.insert(\n                        compound_id=compound_id,\n                        chemicalclass_id=existing_chemicalclass)\n                        \n        # (7) Insert synonyms\n        if compound_id and form.vars.synonyms:\n            synonymlist = form.vars.synonyms\n            for synonym in synonymlist:\n                db.synonym.insert(\n                    compound_id=compound_id,\n                    synonymname=str(synonym).strip(\'\\r\'))\n        \n        inputmolfile = os.path.join(request.folder,\'static/temp/\') + form.vars.molstructure\n        inputmolrdkit = Chem.MolFromMolFile(inputmolfile)\n        if inputmolrdkit == None:\n                form.errors.molstructure = T(\'You must introduce a mol structure file with correct format.\')\n        print inputmolrdkit\n        response.flash = T(\'Compound has been uploaded successfully.\')\n\n\n    content = form\n    #~ else:\n        #~ content = SQLFORM.grid(db.compound)\n\n    return dict(content=content)\n\nresponse._vars=response._caller(upload3)\n'
p7
sS'snapshot'
p8
(dp9
S'exception'
p10
(dp11
S'__module__'
p12
S"'Boost.Python'"
p13
sS'__getslice__'
p14
S"<method-wrapper '__getslice__' of ArgumentError object>"
p15
sS'__str__'
p16
S"<method-wrapper '__str__' of ArgumentError object>"
p17
sS'__reduce__'
p18
S'<built-in method __reduce__ of ArgumentError object>'
p19
sS'__dict__'
p20
S'{}'
p21
sS'__sizeof__'
p22
S'<built-in method __sizeof__ of ArgumentError object>'
p23
sS'__weakref__'
p24
S'None'
p25
sS'__init__'
p26
S"<method-wrapper '__init__' of ArgumentError object>"
p27
sS'__setattr__'
p28
S"<method-wrapper '__setattr__' of ArgumentError object>"
p29
sS'__reduce_ex__'
p30
S'<built-in method __reduce_ex__ of ArgumentError object>'
p31
sS'__new__'
p32
S'<built-in method __new__ of type object>'
p33
sS'__format__'
p34
S'<built-in method __format__ of ArgumentError object>'
p35
sS'__class__'
p36
S"<class 'Boost.Python.ArgumentError'>"
p37
sS'__doc__'
p38
S'None'
p39
sS'__getitem__'
p40
S"<method-wrapper '__getitem__' of ArgumentError object>"
p41
sS'__setstate__'
p42
S'<built-in method __setstate__ of ArgumentError object>'
p43
sS'__getattribute__'
p44
S"<method-wrapper '__getattribute__' of ArgumentError object>"
p45
sS'args'
p46
S"('Python argument types in\\n    rdkit.Chem.rdmolfil...rue, bool removeHs=True, bool strictParsing=True)',)"
p47
sS'__subclasshook__'
p48
S'<built-in method __subclasshook__ of type object>'
p49
sS'__unicode__'
p50
S'<built-in method __unicode__ of ArgumentError object>'
p51
sS'__delattr__'
p52
S"<method-wrapper '__delattr__' of ArgumentError object>"
p53
sS'__repr__'
p54
S"<method-wrapper '__repr__' of ArgumentError object>"
p55
sS'__hash__'
p56
S"<method-wrapper '__hash__' of ArgumentError object>"
p57
ssS'evalue'
p58
S'Python argument types in\n    rdkit.Chem.rdmolfiles.MolFromMolFile(cStringIO.StringO)\ndid not match C++ signature:\n    MolFromMolFile(char const* molFileName, bool sanitize=True, bool removeHs=True, bool strictParsing=True)\n    MolFromMolFile(char const* molFileName, bool sanitize=True, bool removeHs=True, bool strictParsing=True)'
p59
sS'request'
p60
cgluon.html
XML_unpickle
p61
(S's\x07f\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top;">ajax</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">application</td><td style="vertical-align:top;">:</td><td><div>naturar</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">args</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cid</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">client</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">controller</td><td style="vertical-align:top;">:</td><td><div>compuestos</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cookies</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">session_id_admin</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-551a1cec-da5f-44ad-b923-1ecf5ac0bde4<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_admin2</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-00c52e21-cd19-4bb6-b6c8-ba0d929431ac<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_naturar</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-6319cafa-3f37-42c2-81d6-b1a3eb4e77d4<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_welcome</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-7cce0eac-acb6-411e-a5ff-f513181db121<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">env</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">CONTENT_LENGTH</td><td style="vertical-align:top;">:</td><td><div>1219</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">CONTENT_TYPE</td><td style="vertical-align:top;">:</td><td><div>multipart/form-data; boundary=---------------------------174573946010600239351639065738</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT</td><td style="vertical-align:top;">:</td><td><div>text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT_ENCODING</td><td style="vertical-align:top;">:</td><td><div>gzip, deflate</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT_LANGUAGE</td><td style="vertical-align:top;">:</td><td><div>en-US,en;q=0.5</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_CONNECTION</td><td style="vertical-align:top;">:</td><td><div>keep-alive</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_CONTENT_LENGTH</td><td style="vertical-align:top;">:</td><td><div>1219</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_CONTENT_TYPE</td><td style="vertical-align:top;">:</td><td><div>multipart/form-data; boundary=---------------------------174573946010600239351639065738</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_COOKIE</td><td style="vertical-align:top;">:</td><td><div>session_id_welcome=127.0.0.1-7cce0eac-acb6-411e-a5ff-f513181db121; session_id_admin=127.0.0.1-551a1cec-da5f-44ad-b923-1ecf5ac0bde4; session_id_naturar=127.0.0.1-6319cafa-3f37-42c2-81d6-b1a3eb4e77d4; session_id_admin2=127.0.0.1-00c52e21-cd19-4bb6-b6c8-ba0d929431ac</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_HOST</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1:8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_REFERER</td><td style="vertical-align:top;">:</td><td><div>http://127.0.0.1:8000/naturar/compuestos/upload3</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_USER_AGENT</td><td style="vertical-align:top;">:</td><td><div>Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:45.0) Gecko/20100101 Firefox/45.0</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">PATH_INFO</td><td style="vertical-align:top;">:</td><td><div>/naturar/compuestos/upload3</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">QUERY_STRING</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REMOTE_ADDR</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REMOTE_PORT</td><td style="vertical-align:top;">:</td><td><div>49941</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REQUEST_METHOD</td><td style="vertical-align:top;">:</td><td><div>POST</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SCRIPT_NAME</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_NAME</td><td style="vertical-align:top;">:</td><td><div>Atomus</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_PORT</td><td style="vertical-align:top;">:</td><td><div>8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_PROTOCOL</td><td style="vertical-align:top;">:</td><td><div>HTTP/1.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_SOFTWARE</td><td style="vertical-align:top;">:</td><td><div>Rocket 1.2.6</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">app_folders</td><td style="vertical-align:top;">:</td><td><div>set([&#x27;/home/mjl/Dropbox/FITOMEDICINA/web2py/applications/admin/&#x27;, &#x27;/home/mjl/Dropbox/FITOMEDICINA/web2py/applications/welcome/&#x27;, &#x27;/home/mjl/Dropbox/FITOMEDICINA/web2py/applications/naturar/&#x27;, &#x27;/home/mjl/Dropbox/FITOMEDICINA/web2py/applications/admin2/&#x27;])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">applications_parent</td><td style="vertical-align:top;">:</td><td><div>/home/mjl/Dropbox/FITOMEDICINA/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_args</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_options</td><td style="vertical-align:top;">:</td><td><div>&lt;Values at 0x7f3e7c6e8998: {&#x27;verbose&#x27;: False, &#x27;ip&#x27;: &#x27;127.0.0.1&#x27;, &#x27;debuglevel&#x27;: 30, &#x27;with_scheduler&#x27;: False, &#x27;shutdown_timeout&#x27;: 5, &#x27;taskbar&#x27;: False, &#x27;with_coverage&#x27;: False, &#x27;pid_filename&#x27;: &#x27;httpserver.pid&#x27;, &#x27;maxthreads&#x27;: None, &#x27;softcron&#x27;: False, &#x27;server_name&#x27;: &#x27;Atomus&#x27;, &#x27;bpython&#x27;: False, &#x27;nogui&#x27;: False, &#x27;port&#x27;: 8000, &#x27;print_errors&#x27;: False, &#x27;extcron&#x27;: False, &#x27;runcron&#x27;: False, &#x27;run_system_tests&#x27;: False, &#x27;test&#x27;: None, &#x27;folder&#x27;: &#x27;/home/mjl/Dropbox/FITOMEDICINA/web2py&#x27;, &#x27;config&#x27;: &#x27;&#x27;, &#x27;minthreads&#x27;: None, &#x27;shell&#x27;: None, &#x27;run&#x27;: &#x27;&#x27;, &#x27;log_filename&#x27;: &#x27;httpserver.log&#x27;, &#x27;profiler_dir&#x27;: None, &#x27;args&#x27;: [&#x27;&#x27;], &#x27;socket_timeout&#x27;: 5, &#x27;ssl_ca_certificate&#x27;: None, &#x27;scheduler&#x27;: None, &#x27;interfaces&#x27;: None, &#x27;ssl_private_key&#x27;: &#x27;&#x27;, &#x27;gae&#x27;: None, &#x27;password&#x27;: &#x27;******&#x27;, &#x27;request_queue_size&#x27;: 5, &#x27;ssl_certificate&#x27;: &#x27;&#x27;, &#x27;cronjob&#x27;: False, &#x27;numthreads&#x27;: None, &#x27;quiet&#x27;: False, &#x27;import_models&#x27;: False, &#x27;timeout&#x27;: 10, &#x27;plain&#x27;: False, &#x27;nobanner&#x27;: False}&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">content_length</td><td style="vertical-align:top;">:</td><td><div>1219</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">content_type</td><td style="vertical-align:top;">:</td><td><div>multipart/form-data; boundary=---------------------------174573946010600239351639065738</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">db_sessions</td><td style="vertical-align:top;">:</td><td><div>set([])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">debugging</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">gluon_parent</td><td style="vertical-align:top;">:</td><td><div>/home/mjl/Dropbox/FITOMEDICINA/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept</td><td style="vertical-align:top;">:</td><td><div>text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept_encoding</td><td style="vertical-align:top;">:</td><td><div>gzip, deflate</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept_language</td><td style="vertical-align:top;">:</td><td><div>en-US,en;q=0.5</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_connection</td><td style="vertical-align:top;">:</td><td><div>keep-alive</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_content_length</td><td style="vertical-align:top;">:</td><td><div>1219</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_content_type</td><td style="vertical-align:top;">:</td><td><div>multipart/form-data; boundary=---------------------------174573946010600239351639065738</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_cookie</td><td style="vertical-align:top;">:</td><td><div>session_id_welcome=127.0.0.1-7cce0eac-acb6-411e-a5ff-f513181db121; session_id_admin=127.0.0.1-551a1cec-da5f-44ad-b923-1ecf5ac0bde4; session_id_naturar=127.0.0.1-6319cafa-3f37-42c2-81d6-b1a3eb4e77d4; session_id_admin2=127.0.0.1-00c52e21-cd19-4bb6-b6c8-ba0d929431ac</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_host</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1:8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_referer</td><td style="vertical-align:top;">:</td><td><div>http://127.0.0.1:8000/naturar/compuestos/upload3</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_user_agent</td><td style="vertical-align:top;">:</td><td><div>Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:45.0) Gecko/20100101 Firefox/45.0</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_jython</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_pypy</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_source</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">local_hosts</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>Atomus</div></td></tr><tr><td><div>::1</div></td></tr><tr><td><div>127.0.1.1</div></td></tr><tr><td><div>::ffff:127.0.0.1</div></td></tr><tr><td><div>127.0.0.1</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path_info</td><td style="vertical-align:top;">:</td><td><div>/naturar/compuestos/upload3</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">query_string</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">remote_addr</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">remote_port</td><td style="vertical-align:top;">:</td><td><div>49941</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">request_method</td><td style="vertical-align:top;">:</td><td><div>POST</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">request_uri</td><td style="vertical-align:top;">:</td><td><div>/naturar/compuestos/upload3</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">script_name</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_name</td><td style="vertical-align:top;">:</td><td><div>Atomus</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_port</td><td style="vertical-align:top;">:</td><td><div>8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_protocol</td><td style="vertical-align:top;">:</td><td><div>HTTP/1.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_software</td><td style="vertical-align:top;">:</td><td><div>Rocket 1.2.6</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_path</td><td style="vertical-align:top;">:</td><td><div>/home/mjl/Dropbox/FITOMEDICINA/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_version</td><td style="vertical-align:top;">:</td><td><div>2.14.3-stable+timestamp.2016.03.26.23.02.02</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.errors</td><td style="vertical-align:top;">:</td><td><div>&lt;open file &#x27;&lt;stderr&gt;&#x27;, mode &#x27;w&#x27; at 0x7f3e844e91e0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.file_wrapper</td><td style="vertical-align:top;">:</td><td><div>&lt;class wsgiref.util.FileWrapper at 0x7f3e7c62a120&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.input</td><td style="vertical-align:top;">:</td><td><div>&lt;socket._fileobject object at 0x7f3e22919dd0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.multiprocess</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.multithread</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.run_once</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.url_scheme</td><td style="vertical-align:top;">:</td><td><div>http</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.version</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>1</div></td></tr><tr><td><div>0</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_errors</td><td style="vertical-align:top;">:</td><td><div>&lt;open file &#x27;&lt;stderr&gt;&#x27;, mode &#x27;w&#x27; at 0x7f3e844e91e0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_file_wrapper</td><td style="vertical-align:top;">:</td><td><div>&lt;class wsgiref.util.FileWrapper at 0x7f3e7c62a120&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_input</td><td style="vertical-align:top;">:</td><td><div>&lt;socket._fileobject object at 0x7f3e22919dd0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_multiprocess</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_multithread</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_run_once</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_url_scheme</td><td style="vertical-align:top;">:</td><td><div>http</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_version</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>1</div></td></tr><tr><td><div>0</div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">extension</td><td style="vertical-align:top;">:</td><td><div>html</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">folder</td><td style="vertical-align:top;">:</td><td><div>/home/mjl/Dropbox/FITOMEDICINA/web2py/applications/naturar/</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">function</td><td style="vertical-align:top;">:</td><td><div>upload3</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">global_settings</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">app_folders</td><td style="vertical-align:top;">:</td><td><div>set([&#x27;/home/mjl/Dropbox/FITOMEDICINA/web2py/applications/admin/&#x27;, &#x27;/home/mjl/Dropbox/FITOMEDICINA/web2py/applications/welcome/&#x27;, &#x27;/home/mjl/Dropbox/FITOMEDICINA/web2py/applications/naturar/&#x27;, &#x27;/home/mjl/Dropbox/FITOMEDICINA/web2py/applications/admin2/&#x27;])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">applications_parent</td><td style="vertical-align:top;">:</td><td><div>/home/mjl/Dropbox/FITOMEDICINA/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_args</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_options</td><td style="vertical-align:top;">:</td><td><div>&lt;Values at 0x7f3e7c6e8998: {&#x27;verbose&#x27;: False, &#x27;ip&#x27;: &#x27;127.0.0.1&#x27;, &#x27;debuglevel&#x27;: 30, &#x27;with_scheduler&#x27;: False, &#x27;shutdown_timeout&#x27;: 5, &#x27;taskbar&#x27;: False, &#x27;with_coverage&#x27;: False, &#x27;pid_filename&#x27;: &#x27;httpserver.pid&#x27;, &#x27;maxthreads&#x27;: None, &#x27;softcron&#x27;: False, &#x27;server_name&#x27;: &#x27;Atomus&#x27;, &#x27;bpython&#x27;: False, &#x27;nogui&#x27;: False, &#x27;port&#x27;: 8000, &#x27;print_errors&#x27;: False, &#x27;extcron&#x27;: False, &#x27;runcron&#x27;: False, &#x27;run_system_tests&#x27;: False, &#x27;test&#x27;: None, &#x27;folder&#x27;: &#x27;/home/mjl/Dropbox/FITOMEDICINA/web2py&#x27;, &#x27;config&#x27;: &#x27;&#x27;, &#x27;minthreads&#x27;: None, &#x27;shell&#x27;: None, &#x27;run&#x27;: &#x27;&#x27;, &#x27;log_filename&#x27;: &#x27;httpserver.log&#x27;, &#x27;profiler_dir&#x27;: None, &#x27;args&#x27;: [&#x27;&#x27;], &#x27;socket_timeout&#x27;: 5, &#x27;ssl_ca_certificate&#x27;: None, &#x27;scheduler&#x27;: None, &#x27;interfaces&#x27;: None, &#x27;ssl_private_key&#x27;: &#x27;&#x27;, &#x27;gae&#x27;: None, &#x27;password&#x27;: &#x27;******&#x27;, &#x27;request_queue_size&#x27;: 5, &#x27;ssl_certificate&#x27;: &#x27;&#x27;, &#x27;cronjob&#x27;: False, &#x27;numthreads&#x27;: None, &#x27;quiet&#x27;: False, &#x27;import_models&#x27;: False, &#x27;timeout&#x27;: 10, &#x27;plain&#x27;: False, &#x27;nobanner&#x27;: False}&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">db_sessions</td><td style="vertical-align:top;">:</td><td><div>set([])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">debugging</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">gluon_parent</td><td style="vertical-align:top;">:</td><td><div>/home/mjl/Dropbox/FITOMEDICINA/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_jython</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_pypy</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_source</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">local_hosts</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>Atomus</div></td></tr><tr><td><div>::1</div></td></tr><tr><td><div>127.0.1.1</div></td></tr><tr><td><div>::ffff:127.0.0.1</div></td></tr><tr><td><div>127.0.0.1</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_version</td><td style="vertical-align:top;">:</td><td><div>2.14.3-stable+timestamp.2016.03.26.23.02.02</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_https</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_local</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_restful</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_scheduler</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_shell</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">now</td><td style="vertical-align:top;">:</td><td><div>datetime.datetime(2016, 4, 13, 12, 30, 21, 642753)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">raw_args</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">raw_extension</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">url</td><td style="vertical-align:top;">:</td><td><div>/naturar/compuestos/upload3</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">utcnow</td><td style="vertical-align:top;">:</td><td><div>datetime.datetime(2016, 4, 13, 15, 30, 21, 642770)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi</td><td style="vertical-align:top;">:</td><td><div>&lt;gluon.main.LazyWSGI object at 0x7f3e29381850&gt;</div></td></tr></table></div>'
tRp62
sS'frames'
p63
(lp64
(dp65
S'file'
p66
S'/home/mjl/Dropbox/FITOMEDICINA/web2py/gluon/restricted.py'
p67
sS'dump'
p68
(dp69
S'environment'
p70
S"{'A': <class 'gluon.html.A'>, 'ANY_OF': <class 'gluon.validators.ANY_OF'>, 'ASSIGNJS': <function ASSIGNJS>, 'AllChem': <module 'rdkit.Chem.AllChem' from '/opt/rdkit-Release_2015_03_1/rdkit/Chem/AllChem.py'>, 'AppConfig': <function AppConfig>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, ...}"
p71
sS'ccode'
p72
S'<code object <module> at 0x7f3e2908f5b0, file "/...ions/naturar/controllers/compuestos.py", line 10>'
p73
ssS'lnum'
p74
I227
sS'lines'
p75
(dp76
I224
S'            ccode = code'
p77
sI225
S'        else:'
p78
sI226
S'            ccode = compile2(code, layer)'
p79
sI227
S'        exec ccode in environment'
p80
sI228
S'    except HTTP:'
p81
sI229
S'        raise'
p82
sI230
S'    except RestrictedError:'
p83
sI231
S'        # do not encapsulate (obfuscate) the original RestrictedError'
p84
sI222
S'    try:'
p85
sI223
S'        if isinstance(code, types.CodeType):'
p86
ssS'call'
p87
S"(code='# -*- coding: utf-8 -*-\\n# this file is released ...ntent)\\n\\nresponse._vars=response._caller(upload3)\\n', environment={'A': <class 'gluon.html.A'>, 'ANY_OF': <class 'gluon.validators.ANY_OF'>, 'ASSIGNJS': <function ASSIGNJS>, 'AllChem': <module 'rdkit.Chem.AllChem' from '/opt/rdkit-Release_2015_03_1/rdkit/Chem/AllChem.py'>, 'AppConfig': <function AppConfig>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, ...}, layer='/home/mjl/Dropbox/FITOMEDICINA/web2py/applications/naturar/controllers/compuestos.py')"
p88
sS'func'
p89
S'restricted'
p90
sa(dp91
g66
S'/home/mjl/Dropbox/FITOMEDICINA/web2py/applications/naturar/controllers/compuestos.py'
p92
sg68
(dp93
sg74
I425
sg75
(dp94
I416
S"        response.flash = T('Compound has been uploaded successfully.')"
p95
sI417
S''
sI418
S''
sI419
S'    content = form'
p96
sI420
S'    #~ else:'
p97
sI421
S'        #~ content = SQLFORM.grid(db.compound)'
p98
sI422
S''
sI423
S'    return dict(content=content)'
p99
sI414
S"                form.errors.molstructure = T('You must introduce a mol structure file with correct format.')"
p100
sI415
S'        print inputmolrdkit'
p101
ssg87
S'()'
p102
sg89
S'<module>'
p103
sa(dp104
g66
S'/home/mjl/Dropbox/FITOMEDICINA/web2py/gluon/globals.py'
p105
sg68
(dp106
S'self'
p107
S'undefined'
p108
sS'f'
S'<function upload3>'
p109
ssg74
I417
sg75
(dp110
I416
S'        self._vars = None'
p111
sI417
S'        self._caller = lambda f: f()'
p112
sI418
S'        self._view_environment = None'
p113
sI419
S'        self._custom_commit = None'
p114
sI420
S'        self._custom_rollback = None'
p115
sI421
S"        self.generic_patterns = ['*']"
p116
sI412
S"        self.flash = ''            # used by the default view layout"
p117
sI413
S'        self.meta = Storage()      # used by web2py_ajax.html'
p118
sI414
S'        self.menu = []             # used by the default view layout'
p119
sI415
S'        self.files = []            # used by web2py_ajax.html'
p120
ssg87
S'(f=<function upload3>)'
p121
sg89
S'<lambda>'
p122
sa(dp123
g66
S'/home/mjl/Dropbox/FITOMEDICINA/web2py/applications/naturar/controllers/compuestos.py'
p124
sg68
(dp125
S'form.process'
p126
S'<bound method SQLFORM.process of <gluon.sqlhtml.SQLFORM object>>'
p127
sS').accepted'
p128
g108
sS'onvalidation'
p129
g108
sS'form'
p130
S'<gluon.sqlhtml.SQLFORM object>'
p131
sS'global upload_molprocessing'
p132
S'<function upload_molprocessing>'
p133
ssg74
I379
sg75
(dp134
I374
S"        #~ Field('inputselector',requires=IS_IN_SET(['Smile','Draw','File']),widget=SQLFORM.widgets.radio.widget),"
p135
sI375
S"        Field('synonyms', type='list:string', requires=IS_NOT_EMPTY()),"
p136
sI376
S'    )'
p137
sI377
S''
sI378
S'    # (3) Validate form data'
p138
sI379
S'    if form.process(onvalidation=upload_molprocessing).accepted:'
p139
sI380
S''
sI381
S'        # (4) Insert compound'
p140
sI382
S'        compound_id = db.compound.insert('
p141
sI383
S'            **db.compound._filter_fields(form.vars))'
p142
ssg87
S'()'
p143
sg89
S'upload3'
p144
sa(dp145
g66
S'/home/mjl/Dropbox/FITOMEDICINA/web2py/gluon/html.py'
p146
sg68
(dp147
S'self'
p148
S'<gluon.sqlhtml.SQLFORM object>'
p149
sS'self.validate'
p150
S'<bound method SQLFORM.validate of <gluon.sqlhtml.SQLFORM object>>'
p151
sS'kwargs'
p152
S"{'dbio': True, 'onvalidation': <function upload_molprocessing>}"
p153
ssg74
I2301
sg75
(dp154
I2304
S'    REDIRECT_JS = "window.location=\'%s\';return false"'
p155
sI2305
S''
sI2296
S'                return dict(form=SQLFORM(db.table).process(onsuccess=my_callback)'
p156
sI2297
S''
sI2298
S''
sI2299
S'        """'
p157
sI2300
S"        kwargs['dbio'] = kwargs.get('dbio', True)  # necessary for SQLHTML forms"
p158
sI2301
S'        self.validate(**kwargs)'
p159
sI2302
S'        return self'
p160
sI2303
S''
ssg87
S"(self=<gluon.sqlhtml.SQLFORM object>, **kwargs={'dbio': True, 'onvalidation': <function upload_molprocessing>})"
p161
sg89
S'process'
p162
sa(dp163
g66
S'/home/mjl/Dropbox/FITOMEDICINA/web2py/gluon/html.py'
p164
sg68
(dp165
S'self'
p166
S'<gluon.sqlhtml.SQLFORM object>'
p167
sS'self.accepts'
p168
S'<bound method SQLFORM.accepts of <gluon.sqlhtml.SQLFORM object>>'
p169
sS'kwargs'
p170
S"{'dbio': True, 'onvalidation': <function upload_molprocessing>, 'request_vars': <Storage {'inchikey': '', 'synonyms': 'dfd', 'ca...ormkey': '47fa1771-c60a-4317-8bbb-659c9cc6f06d'}>, 'session': <Storage {'last_orderby': None, 'last_query': 'd...eferrer_compound': '/naturar/compuestos/buscar'}>}"
p171
ssg74
I2239
sg75
(dp172
I2240
S"            if onsuccess == 'flash':"
p173
sI2241
S'                if next:'
p174
sI2242
S'                    current.session.flash = message_onsuccess'
p175
sI2243
S'                else:'
p176
sI2234
S"        for key in ('message_onsuccess', 'message_onfailure', 'onsuccess',"
p177
sI2235
S"                    'onfailure', 'next', 'message_onchange', 'onchange'):"
p178
sI2236
S'            if key in kwargs:'
p179
sI2237
S'                del kwargs[key]'
p180
sI2238
S''
sI2239
S'        if self.accepts(**kwargs):'
p181
ssg87
S"(self=<gluon.sqlhtml.SQLFORM object>, **kwargs={'dbio': True, 'onvalidation': <function upload_molprocessing>, 'request_vars': <Storage {'inchikey': '', 'synonyms': 'dfd', 'ca...ormkey': '47fa1771-c60a-4317-8bbb-659c9cc6f06d'}>, 'session': <Storage {'last_orderby': None, 'last_query': 'd...eferrer_compound': '/naturar/compuestos/buscar'}>})"
p182
sg89
S'validate'
p183
sa(dp184
g66
S'/home/mjl/Dropbox/FITOMEDICINA/web2py/gluon/sqlhtml.py'
p185
sg68
(dp186
S'kwargs'
p187
g21
ssg74
I1529
sg75
(dp188
I1524
S'            session,'
p189
sI1525
S'            formname,'
p190
sI1526
S'            keepvalues,'
p191
sI1527
S'            onvalidation,'
p192
sI1528
S'            hideerror=hideerror,'
p193
sI1529
S'            **kwargs'
p194
sI1530
S'        )'
p195
sI1531
S''
sI1532
S'        self.deleted = request_vars.get(self.FIELDNAME_REQUEST_DELETE, False)'
p196
sI1533
S''
ssg87
S"(self=<gluon.sqlhtml.SQLFORM object>, request_vars=<Storage {'inchikey': '', 'synonyms': 'dfd', 'ca...ormkey': '47fa1771-c60a-4317-8bbb-659c9cc6f06d'}>, session=<Storage {'last_orderby': None, 'last_query': 'd...eferrer_compound': '/naturar/compuestos/buscar'}>, formname='no_table/create', keepvalues=False, onvalidation=<function upload_molprocessing>, dbio=True, hideerror=False, detect_record_change=False, **kwargs={})"
p197
sg89
S'accepts'
p198
sa(dp199
g66
S'/home/mjl/Dropbox/FITOMEDICINA/web2py/gluon/html.py'
p200
sg68
(dp201
S'global call_as_list'
p202
S'<function call_as_list>'
p203
sS'self'
p204
S'<gluon.sqlhtml.SQLFORM object>'
p205
sS'onvalidation'
p206
S'<function upload_molprocessing>'
p207
ssg74
I2144
sg75
(dp208
I2144
S'                call_as_list(onvalidation, self)'
p209
sI2145
S'        if self.errors:'
p210
sI2146
S'            status = False'
p211
sI2147
S'        if session is not None:'
p212
sI2148
S"            if hasattr(self, 'record_hash'):"
p213
sI2139
S'                if changed:'
p214
sI2140
S'                    if onchange and self.record_changed and \\'
p215
sI2141
S'                            self.detect_record_change:'
p216
sI2142
S'                        call_as_list(onchange, self)'
p217
sI2143
S'            elif status:'
p218
ssg87
S"(self=<gluon.sqlhtml.SQLFORM object>, request_vars=<Storage {'inchikey': '', 'synonyms': 'dfd', 'ca...ormkey': '47fa1771-c60a-4317-8bbb-659c9cc6f06d'}>, session=<Storage {'last_orderby': None, 'last_query': 'd...eferrer_compound': '/naturar/compuestos/buscar'}>, formname='no_table/create', keepvalues=False, onvalidation=<function upload_molprocessing>, hideerror=False, **kwargs={})"
p219
sg89
g198
sa(dp220
g66
S'/home/mjl/Dropbox/FITOMEDICINA/web2py/gluon/html.py'
p221
sg68
(dp222
S'a'
S'(<gluon.sqlhtml.SQLFORM object>,)'
p223
sS'item'
p224
S'<function upload_molprocessing>'
p225
sS'b'
g21
ssg74
I148
sg75
(dp226
I143
S''
sI144
S'def call_as_list(f, *a, **b):'
p227
sI145
S'    if not isinstance(f, (list, tuple)):'
p228
sI146
S'        f = [f]'
p229
sI147
S'    for item in f:'
p230
sI148
S'        item(*a, **b)'
p231
sI149
S''
sI150
S''
sI151
S"def truncate_string(text, length, dots='...'):"
p232
sI152
S"    text = text.decode('utf-8')"
p233
ssg87
S'(f=[<function upload_molprocessing>], *a=(<gluon.sqlhtml.SQLFORM object>,), **b={})'
p234
sg89
S'call_as_list'
p235
sa(dp236
g66
S'/home/mjl/Dropbox/FITOMEDICINA/web2py/applications/naturar/controllers/compuestos.py'
p237
sg68
(dp238
S'form.vars.molstructure.file'
p239
S'<cStringIO.StringO object>'
p240
sS'form.vars'
p241
S"<Storage {'inchikey': None, 'chemicalclasses': [...inchi': None, 'addinfo': None, 'approved': None}>"
p242
sS'form'
p243
S'<gluon.sqlhtml.SQLFORM object>'
p244
sS'inputmolrdkit'
p245
g108
sS'Chem.MolFromMolFile'
p246
S'<Boost.Python.function object>'
p247
sS'global Chem'
p248
S"<module 'rdkit.Chem' from '/opt/rdkit-Release_2015_03_1/rdkit/Chem/__init__.py'>"
p249
sS'form.vars.molstructure'
p250
S"FieldStorage('molstructure', 'df.mol', 'hola\\ncomo\\nandas\\n')"
p251
ssg74
I347
sg75
(dp252
I342
S'def upload_molprocessing(form):'
p253
sI343
S'        print form.vars.molstructure.file.read()'
p254
sI344
S'        print "paso bis"'
p255
sI345
S'        if form.vars.molstructure != None:'
p256
sI346
S'            print is_valid_ctab(form.vars.molstructure.file.read())'
p257
sI347
S'            inputmolrdkit = Chem.MolFromMolFile(form.vars.molstructure.file)'
p258
sI348
S"            #~ inputmolfile = os.path.join(request.folder,'static/temp/') + form.vars.molstructure"
p259
sI349
S'            print "paso"'
p260
sI350
S'            pass'
p261
sI351
S'        elif form.vars.isosmiles:'
p262
ssg87
S'(form=<gluon.sqlhtml.SQLFORM object>)'
p263
sg89
S'upload_molprocessing'
p264
sasS'pyver'
p265
S'Python 2.7.6: /usr/bin/python (prefix: /usr)'
p266
sS'session'
p267
g61
(S's8\x01\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top;">last_orderby</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">last_query</td><td style="vertical-align:top;">:</td><td><div>db.synonym.id&gt;0</div></td></tr></table></div>'
tRp268
sS'etype'
p269
S"<class 'Boost.Python.ArgumentError'>"
p270
sS'date'
p271
S'Wed Apr 13 12:30:21 2016'
p272
sS'response'
p273
g61
(S's\xc5\x1f\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top;">body</td><td style="vertical-align:top;">:</td><td><div>&lt;cStringIO.StringO object at 0x7f3e22b71148&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cookies</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">session_id_naturar</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-6319cafa-3f37-42c2-81d6-b1a3eb4e77d4<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div>/</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">delimiters</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>{{</div></td></tr><tr><td><div>}}</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">files</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">flash</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">form_label_separator</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">formstyle</td><td style="vertical-align:top;">:</td><td><div>bootstrap3_inline</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">generic_patterns</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>*</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">google_analytics_id</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">headers</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">X-Powered-By</td><td style="vertical-align:top;">:</td><td><div>web2py</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">logo</td><td style="vertical-align:top;">:</td><td><div><a class="navbar-brand" href="http://www.natur.ar/" id="web2py-logo"><b>web<span>2</span>py</b>&trade;&nbsp;</a></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">menu</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div><table><tr><td><div>Home</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/naturar/default/index</div></td></tr><tr><td><div><table></table></div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Research Groups</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/naturar/groups/list</div></td></tr><tr><td><div><table></table></div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Compounds</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/naturar/data/compounds</div></td></tr><tr><td><div><table></table></div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Extracts</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/naturar/data/extracts</div></td></tr><tr><td><div><table></table></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">meta</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">author</td><td style="vertical-align:top;">:</td><td><div>Your Name &lt;you@example.com&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">description</td><td style="vertical-align:top;">:</td><td><div>a cool new app</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">generator</td><td style="vertical-align:top;">:</td><td><div>Web2py Web Framework</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">keywords</td><td style="vertical-align:top;">:</td><td><div>web2py, python, framework</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">models_to_run</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>^\\w+\\.py$</div></td></tr><tr><td><div>^compuestos/\\w+\\.py$</div></td></tr><tr><td><div>^compuestos/upload3/\\w+\\.py$</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">postprocessing</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_client</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_cookie_compression_level</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_cookie_expires</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_data_name</td><td style="vertical-align:top;">:</td><td><div>session_data_naturar</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_file</td><td style="vertical-align:top;">:</td><td><div>&lt;open file &#x27;/home/mjl/Dropbox/FITOMEDICINA/web2py/applications/naturar/sessions/060/01f/127.0.0.1-6319cafa-3f37-42c2-81d6-b1a3eb4e77d4&#x27;, mode &#x27;rb+&#x27; at 0x7f3e70056ed0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_filename</td><td style="vertical-align:top;">:</td><td><div>/home/mjl/Dropbox/FITOMEDICINA/web2py/applications/naturar/sessions/127.0.0.1-6319cafa-3f37-42c2-81d6-b1a3eb4e77d4</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_hash</td><td style="vertical-align:top;">:</td><td><div>409c4dba266c250111430d871e0c52bb</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-6319cafa-3f37-42c2-81d6-b1a3eb4e77d4</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_name</td><td style="vertical-align:top;">:</td><td><div>session_id_naturar</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_locked</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_masterapp</td><td style="vertical-align:top;">:</td><td><div>naturar</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_new</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_storage_type</td><td style="vertical-align:top;">:</td><td><div>file</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">status</td><td style="vertical-align:top;">:</td><td><div>200</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">subtitle</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">title</td><td style="vertical-align:top;">:</td><td><div>Naturar</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">view</td><td style="vertical-align:top;">:</td><td><div>compuestos/upload3.html</div></td></tr></table></div>'
tRp274
sS'locals'
p275
(dp276
S'form'
p277
S'<gluon.sqlhtml.SQLFORM object>'
p278
sssS'traceback'
p279
S'Traceback (most recent call last):\n  File "/home/mjl/Dropbox/FITOMEDICINA/web2py/gluon/restricted.py", line 227, in restricted\n    exec ccode in environment\n  File "/home/mjl/Dropbox/FITOMEDICINA/web2py/applications/naturar/controllers/compuestos.py", line 425, in <module>\n  File "/home/mjl/Dropbox/FITOMEDICINA/web2py/gluon/globals.py", line 417, in <lambda>\n    self._caller = lambda f: f()\n  File "/home/mjl/Dropbox/FITOMEDICINA/web2py/applications/naturar/controllers/compuestos.py", line 379, in upload3\n    if form.process(onvalidation=upload_molprocessing).accepted:\n  File "/home/mjl/Dropbox/FITOMEDICINA/web2py/gluon/html.py", line 2301, in process\n    self.validate(**kwargs)\n  File "/home/mjl/Dropbox/FITOMEDICINA/web2py/gluon/html.py", line 2239, in validate\n    if self.accepts(**kwargs):\n  File "/home/mjl/Dropbox/FITOMEDICINA/web2py/gluon/sqlhtml.py", line 1529, in accepts\n    **kwargs\n  File "/home/mjl/Dropbox/FITOMEDICINA/web2py/gluon/html.py", line 2144, in accepts\n    call_as_list(onvalidation, self)\n  File "/home/mjl/Dropbox/FITOMEDICINA/web2py/gluon/html.py", line 148, in call_as_list\n    item(*a, **b)\n  File "/home/mjl/Dropbox/FITOMEDICINA/web2py/applications/naturar/controllers/compuestos.py", line 347, in upload_molprocessing\n    inputmolrdkit = Chem.MolFromMolFile(form.vars.molstructure.file)\nArgumentError: Python argument types in\n    rdkit.Chem.rdmolfiles.MolFromMolFile(cStringIO.StringO)\ndid not match C++ signature:\n    MolFromMolFile(char const* molFileName, bool sanitize=True, bool removeHs=True, bool strictParsing=True)\n    MolFromMolFile(char const* molFileName, bool sanitize=True, bool removeHs=True, bool strictParsing=True)\n'
p280
s.