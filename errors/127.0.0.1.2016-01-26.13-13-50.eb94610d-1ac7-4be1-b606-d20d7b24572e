(dp1
S'output'
p2
S"<type 'exceptions.KeyError'> 'Cannot resolve reference structure in structure_descriptor definition'"
p3
sS'layer'
p4
S'/home/www-data/web2py/applications/naturar/models/db.py'
p5
sS'code'
p6
S'# -*- coding: utf-8 -*-\n\n#########################################################################\n## This scaffolding model makes your app work on Google App Engine too\n## File is released under public domain and you can use without limitations\n#########################################################################\n\n## if SSL/HTTPS is properly configured and you want all HTTP requests to\n## be redirected to HTTPS, uncomment the line below:\n# request.requires_https()\n\n## app configuration made easy. Look inside private/appconfig.ini\nfrom gluon.contrib.appconfig import AppConfig\n## once in production, remove reload=True to gain full speed\nmyconf = AppConfig(reload=True)\n\n\n\n#~ if not request.env.web2py_runtime_gae:\n    #~ ## if NOT running on Google App Engine use SQLite or other DB\n    #~ db = DAL(myconf.take(\'db.uri\'), pool_size=myconf.take(\'db.pool_size\', cast=int), check_reserved=[\'all\'])\n#~ else:\n    #~ ## connect to Google BigTable (optional \'google:datastore://namespace\')\n    #~ db = DAL(\'google:datastore+ndb\')\n    #~ ## store sessions and tickets there\n    #~ session.connect(request, response, db=db)\n    #~ ## or store session in Memcache, Redis, etc.\n    #~ ## from gluon.contrib.memdb import MEMDB\n    #~ ## from google.appengine.api.memcache import Client\n    #~ ## session.connect(request, response, db = MEMDB(Client()))\n    #~ \ndb = DAL("postgres://fito:123456@localhost/naturardb", migrate=True, fake_migrate=True,)\n#~ db = DAL("postgres://fito:123456@localhost/naturardb", lazy_tables=True)\n\n## by default give a view/generic.extension to all actions from localhost\n## none otherwise. a pattern can be \'controller/function.extension\'\nresponse.generic_patterns = [\'*\'] if request.is_local else []\n## choose a style for forms\nresponse.formstyle = myconf.take(\'forms.formstyle\')  # or \'bootstrap3_stacked\' or \'bootstrap2\' or other\nresponse.form_label_separator = myconf.take(\'forms.separator\')\n\n\n## (optional) optimize handling of static files\n# response.optimize_css = \'concat,minify,inline\'\n# response.optimize_js = \'concat,minify,inline\'\n## (optional) static assets folder versioning\n# response.static_version = \'0.0.0\'\n#########################################################################\n## Here is sample code if you need for\n## - email capabilities\n## - authentication (registration, login, logout, ... )\n## - authorization (role based authorization)\n## - services (xml, csv, json, xmlrpc, jsonrpc, amf, rss)\n## - old style crud actions\n## (more options discussed in gluon/tools.py)\n#########################################################################\n\nfrom gluon.tools import Auth, Service, PluginManager\n\nauth = Auth(db)\nservice = Service()\nplugins = PluginManager()\n\n## extra fields (mjl)\nauth.settings.extra_fields[\'auth_user\']= [\n    Field(\'address\', type=\'text\', label=T(\'Address\')),\n    Field(\'phone\', type=\'text\', label=T(\'Phone\')),\n    Field(\'picture\', type=\'upload\', label=T(\'Picture\')),\n    Field(\'rearchdescription\', type=\'text\', label=T(\'Research Description\')),\n    Field(\'additionalinfo\', type=\'text\', label=T(\'Additional Information\')),\n    ]\n\n\n## create all tables needed by auth if not custom tables\nauth.define_tables(username=False, signature=False) \n\n\n## configure email\nmail = auth.settings.mailer\nmail.settings.server = \'logging\' if request.is_local else myconf.take(\'smtp.server\')\nmail.settings.sender = myconf.take(\'smtp.sender\')\nmail.settings.login = myconf.take(\'smtp.login\')\n\n## configure auth policy\nauth.settings.registration_requires_verification = False\nauth.settings.registration_requires_approval = False\nauth.settings.reset_password_requires_verification = True\n\n\n#########################################################################\n## Define your tables below (or better in another model file) for example\n##\n## >>> db.define_table(\'mytable\',Field(\'myfield\',\'string\'))\n##\n## Fields can be \'string\',\'text\',\'password\',\'integer\',\'double\',\'boolean\'\n##       \'date\',\'time\',\'datetime\',\'blob\',\'upload\', \'reference TABLENAME\'\n## There is an implicit \'id integer autoincrement\' field\n## Consult manual for more options, validators, etc.\n##\n## More API examples for controllers:\n##\n## >>> db.mytable.insert(myfield=\'value\')\n## >>> rows=db(db.mytable.myfield==\'value\').select(db.mytable.ALL)\n## >>> for row in rows: print row.id, row.myfield\n#########################################################################\n\n# --------------------------------------------------------------------\n# SETTINGS\n# --------------------------------------------------------------------\n\n\n#~ settings.max_size # get the value\n#~ settings.update_record(summary=new_summary) # set a value \ndb.define_table(\'settings\', \n    Field(\'imagedir\', default="applications/naturar/images_molecule/"),\n    #~ Field(\'max_size\', \'integer\', default=10),\n    #~ Field(\'summary\', \'text\', \'abc\'),\n)\n# create an instance of settings table\nsettings = db(db.settings.id > 0).select().first()\nif not settings:\n    settings = db.settings.insert()\n\n# --------------------------------------------------------------------    \n# LOCATION\n# --------------------------------------------------------------------\n\n\'\'\'data is extrated of Yahoo and Google webservices \'\'\'\ndb.define_table(\'location\',  \n    auth.signature,\n    Field(\'country\', type=\'string\'),\n    Field(\'state\', type=\'string\'),\n    Field(\'city\', type=\'string\'),\n    Field(\'place\', type=\'string\'),\n    Field(\'latitude\', type=\'double\'),\n    Field(\'longitude\', type=\'double\'),\n    Field(\'yahoowoeid\', type=\'integer\'),\n    Field(\'googleplaceid\', type=\'string\'),\n    Field(\'placetypename\', type=\'string\'),\n    )\n\n\n# --------------------------------------------------------------------\n# DOCS\n# --------------------------------------------------------------------\n\n\'\'\'\nStore bibliographic information, this can be obtained from Crossref API\n\'\'\'\ndb.define_table(\'doc\', \n    auth.signature,\n    Field(\'journal\', type=\'string\'),\n    Field(\'year\', type=\'datetime\', requires = IS_DATE(format=(\'%Y\'))),\n    Field(\'volume\', type=\'integer\'),\n    Field(\'issue\', type=\'integer\'),\n    Field(\'first_page\', type=\'integer\'),\n    Field(\'last_page\', type=\'integer\'),\n    Field(\'doi\', type=\'string\'),\n    Field(\'pubmed_id\'),\n    Field(\'title\', type=\'text\'),\n    Field(\'doc_type\', type=\'string\'),\n    Field(\'authors\'),\n    Field(\'abstract\', type=\'text\'),\n    )\n\n\n# --------------------------------------------------------------------\n# COMPOUND INFORMATION\n# --------------------------------------------------------------------\n\n\'\'\'\nStore compound information\n\'\'\'\ndb.define_table(\'compound\', \n    auth.signature,\n    Field(\'compoundname\', requires=IS_NOT_EMPTY()),\n    Field(\'iupacname\', type=\'string\'),\n    Field(\'inchi\', type=\'string\'),\n    Field(\'inchikey\', type=\'string\'),\n    Field(\'isosmiles\', type=\'string\'),\n    Field(\'cansmiles\', type=\'string\'),\n    Field(\'imagepath\', type=\'text\', readable=False, writable=False),\n    Field(\'addinfo\', type=\'text\'),\n    format=\'c%(id)i-%(name)s\',\n    )\n    \n\'\'\'\nMany to many table relationship: Docs and Compounds\n\'\'\'\ndb.define_table(\'compound_doc\',\n    auth.signature,\n    Field(\'compound_id\', \'reference compound\'),\n    Field(\'doc_id\', \'reference doc\'),\n    )\n\n\'\'\'\nStructures (conformers) of compounds\n\'\'\'\ndb.executesql(\'CREATE TABLE IF NOT EXISTS structure (id int NOT null, molstructure MOL, compound_id int references compound(id), PRIMARY KEY(id));\')\n\n\'\'\'\nStore descriptors of 3D structures\n\'\'\'\ndb.define_table(\'structuredescriptor\',\n    auth.signature,\n    Field(\'methodname\', type=\'string\')\n    )\n    \n\'\'\'\nMany to many table relationship: StructureDescriptors and Structures\n\'\'\'\ndb.define_table(\'structure_descriptor\',\n    auth.signature,\n    Field(\'structuredescriptor_id\', \'reference structuredescriptor\'),\n    Field(\'structure_id\', \'reference structure\'),\n    Field(\'descriptorvalue\'),\n    migrate=True, fake_migrate=True,\n    )    \n\n\'\'\'\nTypes of compound synomys\n\'\'\'\ndb.define_table(\'synonymtype\',\n    auth.signature,\n    Field(\'synonymtype\', type=\'string\'),\n    ) \n\n\'\'\'\nStore synonyms of compound names\n\'\'\'\ndb.define_table(\'synonym\',\n    auth.signature,\n    Field(\'synonymtype_id\', \'reference synonymtype\'),\n    Field(\'synonymname\', type=\'string\'),\n    Field(\'compound_id\', \'reference compound\'),\n    )    \n\n\'\'\'\nList of compound classification, active.\n\'\'\'\ndb.define_table(\'classification\',\n    auth.signature,\n    Field(\'classificationname\', type=\'string\'),\n    Field(\'classificationdescription\', type=\'text\'),\n    )\n\n\'\'\'\nMany to many table relationship: Classification and Compounds\n\'\'\'\ndb.define_table(\'compound_classification\',\n    auth.signature,\n    Field(\'compound_id\', \'reference compound\'),\n    Field(\'classification_id\', \'reference classification\'),\n    )\n    \n\'\'\'\nList of compound class,  \nfuctional groups, ej aminas, sulfonamidas, etc.\n\'\'\'\ndb.define_table(\'chemicalclass\',\n    auth.signature,\n    Field(\'classname_en\', type=\'string\'),\n    Field(\'classname_es\', type=\'string\'),\n    Field(\'classdescription\', type=\'text\'),\n    )\n\n\'\'\'\nMany to many table relationship: Chemicalclass and Compounds,\n\'\'\'\ndb.define_table(\'compound_chemicalclass\',\n    auth.signature,\n    Field(\'compound_id\', \'reference compound\'),\n    Field(\'chemicalclass_id\', \'reference chemicalclass\'),\n    )\n    \n\'\'\'\nDefine isomer relationships between two compounds\n\'\'\'\ndb.define_table(\'isomer\',\n    auth.signature,\n    Field(\'compound1_id\', \'reference compound\'),\n    Field(\'compound2_id\', \'reference compound\'),\n    )\n\n\n#~ # define autocomplete function for extracto\n#~ db.compound_record.extract.widget = SQLFORM.widgets.autocomplete(\n     #~ request, db.extract_record.extract_name, id_field=db.extract_record.id, limitby=(0,10), min_length=2)\n\n\'\'\'\nList of calculated properties\n\'\'\'\ndb.define_table(\'compoundproperty\', \n    auth.signature,\n    Field(\'compound_id\', \'reference compound\'),\n    Field(\'molecularweight\', type=\'decimal(4,4)\'),\n    Field(\'molecularformula\', type=\'string\'),\n    Field(\'molecularvolume\', type=\'decimal(4,3)\', label="volumen"),\n    Field(\'logp\', type=\'decimal(2,5)\'),\n    Field(\'tpsa\', type=\'decimal(4,3)\'),\n    Field(\'hbd\', type=\'integer\'),\n    Field(\'hba\', type=\'integer\'),\n    Field(\'numrotatable\', type=\'integer\'),\n    Field(\'numring\', type=\'integer\'),\n    Field(\'numn\', type=\'integer\'),\n    Field(\'numo\', type=\'integer\'),\n    Field(\'nums\', type=\'integer\'),\n    Field(\'numro5violation\', type=\'integer\'),\n    )\n\n\'\'\'\nList of extra properties\n\'\'\'\ndb.define_table(\'extraproperty\', \n    auth.signature,\n    Field(\'extrapropertyname_en\', type=\'string\'),\n    Field(\'extrapropertyname_es\', type=\'string\'),\n    )\n\n\'\'\'\nMany to many table relationship: Extraproperty and Compounds,\n\'\'\'\ndb.define_table(\'compound_extraproperty\',\n    auth.signature,\n    Field(\'compound_id\', \'reference compound\'),\n    Field(\'extraproperty_id\', \'reference extraproperty\'),\n    Field(\'extrapropertyvalue\')\n    )\n\n\n# --------------------------------------------------------------------\n# SOURCE INFORMATION\n# --------------------------------------------------------------------\n\n\'\'\' \nTable where is stored source information obtained frod databases like \nCatalogue of Life using webservices.\ndbname is the name of the database whereis is obtained the data and \nidfromdb is the original ID code .\n\'\'\'\ndb.define_table(\'source\', \n    auth.signature,\n    Field(\'scientificname\', type=\'string\'),\n    Field(\'sourcekingdom\', type=\'string\'),\n    Field(\'sourcefamily\', type=\'string\'),\n    Field(\'sourcegenus\', type=\'string\'),\n    Field(\'sourcespecies\', type=\'string\'),\n    Field(\'variety\', type=\'string\'),\n    Field(\'ethnomedicinalinfo\', type=\'text\'),\n    Field(\'dbname\', type=\'string\'),\n    Field(\'idfromdb\', type=\'string\'),\n    )\n\n\'\'\'\nImages of sources\n\'\'\'\ndb.define_table(\'sourceimage\',\n    auth.signature,\n    Field(\'source_id\', \'reference source\'),\n    Field(\'sourceimage\', type=\'string\'),\n    Field(\'credit\', type=\'string\'),\n    )\n\n\'\'\'\nNative names of a source\n\'\'\'\ndb.define_table(\'nativename\',\n    auth.signature,\n    Field(\'source_id\', \'reference source\'),\n    Field(\'nativename\', type=\'string\'),\n    Field(\'culture\', type=\'string\'),\n    )\n    \n\'\'\'\nCommon names of a source\n\'\'\'\ndb.define_table(\'commonname\',\n    auth.signature,\n    Field(\'source_id\', \'reference source\'),\n    Field(\'commonname\', type=\'string\'),\n    )\n    \n\'\'\'\nMedicinal Uses\n\'\'\'\ndb.define_table(\'medicinal\',\n    auth.signature,\n    Field(\'medicinaluse_en\', type=\'string\'),\n    Field(\'medicinaluse_es\', type=\'string\'),\n    )\n\n\'\'\'\nMany to many table relationship: Medicinal Uses and Sources\n\'\'\'\ndb.define_table(\'source_medicinal\',\n    auth.signature,\n    Field(\'source_id\', \'reference source\'),\n    Field(\'medicinal_id\', \'reference medicinal\'),\n    )\n    \n\'\'\'\nFood Uses\n\'\'\'\ndb.define_table(\'food\',\n    auth.signature,\n    Field(\'fooduse_en\', type=\'string\'),\n    Field(\'fooduse_es\', type=\'string\'),\n    )\n\n\'\'\'\nMany to many table relationship: Food Uses and Sources\n\'\'\'\ndb.define_table(\'source_food\',\n    auth.signature,\n    Field(\'source_id\', \'reference source\'),\n    Field(\'food_id\', \'reference food\'),\n    )\n\n\n\'\'\'\nOther Uses\n\'\'\'\ndb.define_table(\'otheruse\',\n    auth.signature,\n    Field(\'otherusename\', type=\'string\'),\n    )\n\n\'\'\'\nMany to many table relationship: Other Uses and Sources\n\'\'\'\ndb.define_table(\'source_otheruse\',\n    auth.signature,\n    Field(\'source_id\', \'reference source\'),\n    Field(\'otheruse_id\', \'reference otheruse\'),\n    )\n\n\'\'\'\nMany to many table relationship: Location and Sources\n\'\'\'\ndb.define_table(\'source_location\',\n    auth.signature,\n    Field(\'source_id\', \'reference source\'),\n    Field(\'location_id\', \'reference location\'),\n    )\n\n\'\'\'\nMany to many table relationship: Docs and Sources\n\'\'\'\ndb.define_table(\'source_doc\',\n    auth.signature,\n    Field(\'source_id\', \'reference source\'),\n    Field(\'doc_id\', \'reference doc\'),\n    )\n     \n     \n# --------------------------------------------------------------------\n# USERS (cont.)\n# --------------------------------------------------------------------\n\n\'\'\'\nStore internal messages between members\n\'\'\'\ndb.define_table(\'message\',\n    auth.signature,\n    Field(\'messagetitle\', type=\'string\'),\n    Field(\'messagebody\', type=\'text\'),\n    Field(\'usersent_id\', \'reference auth_user\'),\n    Field(\'userreceiver_id\', \'reference auth_user\'),\n    Field(\'date\', type=\'datetime\'),\n    )\n\n\'\'\'\nResearch groups\n\'\'\'\ndb.define_table(\'researchgroup\',\n    auth.signature,\n    Field(\'reseachname\', type=\'string\'),\n    Field(\'institution\', type=\'string\'),\n    Field(\'webpage\', type=\'string\'),\n    Field(\'email\', type=\'string\'),\n    Field(\'telephone\', type=\'string\'),\n    Field(\'address\', type=\'string\'),\n    Field(\'location_id\', \'reference location\'),\n    Field(\'logo\', type=\'upload\'),\n    )\n    \n\'\'\'\nMany to many table relationship: Research Groups and Users\n\'\'\'\ndb.define_table(\'user_reseach\',\n    auth.signature,\n    Field(\'user_id\', \'reference auth_user\'),\n    Field(\'researchgroup_id\', \'reference researchgroup\'),\n    )\n    \n\'\'\'\nMany to many table relationship: Docs and Users\n\'\'\'\ndb.define_table(\'user_doc\',\n    auth.signature,\n    Field(\'user_id\', \'reference auth_user\'),\n    Field(\'doc_id\', \'reference doc\'),\n    )   \n\n\'\'\'\nMany to many table relationship: Compounds and Users to store in profile \n\'\'\'\ndb.define_table(\'bookmark\',\n    auth.signature,\n    Field(\'user_id\', \'reference auth_user\'),\n    Field(\'compound_id\', \'reference compound\'),\n    )   \n\n\n# --------------------------------------------------------------------\n# EXTRACTS\n# --------------------------------------------------------------------\n\n\'\'\'\nList of part from where you can obtain extract\n\'\'\'\ndb.define_table(\'partused\',\n    auth.signature,\n    Field(\'partname_en\'),\n    Field(\'partname_es\'),\n    )\n\n\'\'\'\nMain table of extract\n\'\'\'\ndb.define_table(\'extract\', \n    auth.signature,\n    Field(\'source_id\', \'reference source\'),\n    Field(\'location_id\', \'reference location\'),\n    Field(\'partused_id\', \'reference partused\'),\n    Field(\'extractpreparation\', type=\'text\'),\n    format=\'%(extract_name)s\',\n    )\n\n\'\'\'\nMany to many table relationship: Docs and Extract\n\'\'\'\ndb.define_table(\'extract_doc\',\n    auth.signature,\n    Field(\'extract_id\', \'reference extract\'),\n    Field(\'doc_id\', \'reference doc\'),\n    )\n\n\'\'\'\nMany to many table relationship: Compound and Extract\n\'\'\'\ndb.define_table(\'compound_extract\',\n    auth.signature,\n    Field(\'extract_id\', \'reference extract\'),\n    Field(\'compound_id\', \'reference compound\'),\n    Field(\'compoundamount\', type=\'double\'),\n    )\n\n\n# --------------------------------------------------------------------\n# ASSAYS\n# --------------------------------------------------------------------\n\n\'\'\'\nList of assays\n\'\'\'\ndb.define_table(\'assay\',\n    auth.signature,\n    Field(\'assayname\', type=\'string\'),\n    Field(\'assaydescription\', type=\'text\'),\n    Field(\'pubchecbioassay_id\'),\n    )\n\n\'\'\'\nMany to many table relationship: Assay and Extract\n\'\'\'\ndb.define_table(\'extract_assay\',\n    auth.signature,\n    Field(\'extract_id\', \'reference extract\'),\n    Field(\'compound_id\', \'reference compound\'),\n    Field(\'compoundamount\', type=\'double\'),    \n    Field(\'inhibition\', type=\'double\'),\n    Field(\'activity\', type=\'double\'),\n    Field(\'cytotoxicity\', type=\'double\'),\n    Field(\'sideEffects\', type=\'text\'),\n    )\n\n\'\'\'\nMany to many table relationship: Docs and Assay\n\'\'\'\ndb.define_table(\'assay_doc\',\n    auth.signature,\n    Field(\'assay_id\', \'reference assay\'),\n    Field(\'doc_id\', \'reference doc\'),\n    )\n\n\'\'\'\nList of assay targets\n\'\'\'\ndb.define_table(\'target\',\n    auth.signature,\n    Field(\'targetname\', type=\'string\'),\n    )\n\n\'\'\'\nMany to many table relationship: Target and Assay\n\'\'\'\ndb.define_table(\'assay_target\',\n    auth.signature,\n    Field(\'assay_id\', \'reference assay\'),\n    Field(\'target_id\', \'reference target\'),\n    )\n\n\n\n## after defining tables, uncomment below to enable auditing\n#~ auth.enable_record_versioning(db)\n\n\n\n'
p7
sS'snapshot'
p8
(dp9
S'exception'
p10
(dp11
S'__hash__'
p12
S"<method-wrapper '__hash__' of exceptions.KeyError object>"
p13
sS'__setattr__'
p14
S"<method-wrapper '__setattr__' of exceptions.KeyError object>"
p15
sS'__reduce_ex__'
p16
S'<built-in method __reduce_ex__ of exceptions.KeyError object>'
p17
sS'__getslice__'
p18
S"<method-wrapper '__getslice__' of exceptions.KeyError object>"
p19
sS'__getitem__'
p20
S"<method-wrapper '__getitem__' of exceptions.KeyError object>"
p21
sS'__setstate__'
p22
S'<built-in method __setstate__ of exceptions.KeyError object>'
p23
sS'args'
p24
S"('Cannot resolve reference structure in structure_descriptor definition',)"
p25
sS'__reduce__'
p26
S'<built-in method __reduce__ of exceptions.KeyError object>'
p27
sS'__str__'
p28
S"<method-wrapper '__str__' of exceptions.KeyError object>"
p29
sS'__format__'
p30
S'<built-in method __format__ of exceptions.KeyError object>'
p31
sS'__getattribute__'
p32
S"<method-wrapper '__getattribute__' of exceptions.KeyError object>"
p33
sS'__class__'
p34
S"<type 'exceptions.KeyError'>"
p35
sS'__unicode__'
p36
S'<built-in method __unicode__ of exceptions.KeyError object>'
p37
sS'__delattr__'
p38
S"<method-wrapper '__delattr__' of exceptions.KeyError object>"
p39
sS'__subclasshook__'
p40
S'<built-in method __subclasshook__ of type object>'
p41
sS'__repr__'
p42
S"<method-wrapper '__repr__' of exceptions.KeyError object>"
p43
sS'__dict__'
p44
S'{}'
p45
sS'__sizeof__'
p46
S'<built-in method __sizeof__ of exceptions.KeyError object>'
p47
sS'__doc__'
p48
S"'Mapping key not found.'"
p49
sS'__init__'
p50
S"<method-wrapper '__init__' of exceptions.KeyError object>"
p51
sS'__new__'
p52
S'<built-in method __new__ of type object>'
p53
ssS'evalue'
p54
S"'Cannot resolve reference structure in structure_descriptor definition'"
p55
sS'request'
p56
cgluon.html
XML_unpickle
p57
(S's}[\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top;">ajax</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">application</td><td style="vertical-align:top;">:</td><td><div>naturar</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">args</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cid</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">client</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">controller</td><td style="vertical-align:top;">:</td><td><div>appadmin</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cookies</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">session_id_admin</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-7240e5df-a847-4a36-9c8c-71f953e1dcb1<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_naturar</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-04a0b155-1236-48c7-863d-066aaaace2b9<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_welcome</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-812cc422-02ee-4cfb-b98f-e14ecaf0fca9<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">env</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT</td><td style="vertical-align:top;">:</td><td><div>text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT_ENCODING</td><td style="vertical-align:top;">:</td><td><div>gzip, deflate, sdch</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT_LANGUAGE</td><td style="vertical-align:top;">:</td><td><div>es-ES,es;q=0.8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_CACHE_CONTROL</td><td style="vertical-align:top;">:</td><td><div>max-age=0</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_CONNECTION</td><td style="vertical-align:top;">:</td><td><div>keep-alive</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_COOKIE</td><td style="vertical-align:top;">:</td><td><div>session_id_welcome=127.0.0.1-812cc422-02ee-4cfb-b98f-e14ecaf0fca9; session_id_naturar=127.0.0.1-04a0b155-1236-48c7-863d-066aaaace2b9; session_id_admin=127.0.0.1-7240e5df-a847-4a36-9c8c-71f953e1dcb1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_HOST</td><td style="vertical-align:top;">:</td><td><div>127.0.1.1:8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_UPGRADE_INSECURE_REQUESTS</td><td style="vertical-align:top;">:</td><td><div>1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_USER_AGENT</td><td style="vertical-align:top;">:</td><td><div>Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/47.0.2526.106 Safari/537.36</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">PATH_INFO</td><td style="vertical-align:top;">:</td><td><div>/naturar/appadmin/index</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">QUERY_STRING</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REMOTE_ADDR</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REMOTE_PORT</td><td style="vertical-align:top;">:</td><td><div>39055</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REQUEST_METHOD</td><td style="vertical-align:top;">:</td><td><div>GET</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SCRIPT_NAME</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_NAME</td><td style="vertical-align:top;">:</td><td><div>Gandalf</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_PORT</td><td style="vertical-align:top;">:</td><td><div>8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_PROTOCOL</td><td style="vertical-align:top;">:</td><td><div>HTTP/1.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_SOFTWARE</td><td style="vertical-align:top;">:</td><td><div>Rocket 1.2.6</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">app_folders</td><td style="vertical-align:top;">:</td><td><div>set([&#x27;/home/www-data/web2py/applications/welcome/&#x27;, &#x27;/home/www-data/web2py/applications/naturar/&#x27;, &#x27;/home/www-data/web2py/applications/admin/&#x27;])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">applications_parent</td><td style="vertical-align:top;">:</td><td><div>/home/www-data/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_args</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_options</td><td style="vertical-align:top;">:</td><td><div>&lt;Values at 0x7f47b09d6f38: {&#x27;verbose&#x27;: False, &#x27;ip&#x27;: &#x27;127.0.0.1&#x27;, &#x27;debuglevel&#x27;: 30, &#x27;with_scheduler&#x27;: False, &#x27;ips&#x27;: [&#x27;127.0.1.1&#x27;], &#x27;shutdown_timeout&#x27;: 5, &#x27;taskbar&#x27;: False, &#x27;with_coverage&#x27;: False, &#x27;scheduler_groups&#x27;: None, &#x27;port&#x27;: 8000, &#x27;maxthreads&#x27;: None, &#x27;softcron&#x27;: False, &#x27;server_name&#x27;: &#x27;Gandalf&#x27;, &#x27;bpython&#x27;: False, &#x27;nogui&#x27;: False, &#x27;pid_filename&#x27;: &#x27;httpserver.pid&#x27;, &#x27;print_errors&#x27;: False, &#x27;extcron&#x27;: False, &#x27;runcron&#x27;: False, &#x27;run_system_tests&#x27;: False, &#x27;test&#x27;: None, &#x27;folder&#x27;: &#x27;/home/www-data/web2py&#x27;, &#x27;config&#x27;: &#x27;&#x27;, &#x27;minthreads&#x27;: None, &#x27;shell&#x27;: None, &#x27;run&#x27;: &#x27;&#x27;, &#x27;log_filename&#x27;: &#x27;httpserver.log&#x27;, &#x27;profiler_dir&#x27;: None, &#x27;args&#x27;: [&#x27;&#x27;], &#x27;socket_timeout&#x27;: 5, &#x27;ssl_ca_certificate&#x27;: None, &#x27;scheduler&#x27;: None, &#x27;interfaces&#x27;: None, &#x27;ssl_private_key&#x27;: &#x27;&#x27;, &#x27;gae&#x27;: None, &#x27;password&#x27;: &#x27;&lt;ask&gt;&#x27;, &#x27;request_queue_size&#x27;: 5, &#x27;ssl_certificate&#x27;: &#x27;&#x27;, &#x27;cronjob&#x27;: False, &#x27;numthreads&#x27;: None, &#x27;quiet&#x27;: False, &#x27;import_models&#x27;: False, &#x27;timeout&#x27;: 10, &#x27;plain&#x27;: False, &#x27;nobanner&#x27;: False}&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">db_sessions</td><td style="vertical-align:top;">:</td><td><div>set([])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">debugging</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">gluon_parent</td><td style="vertical-align:top;">:</td><td><div>/home/www-data/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept</td><td style="vertical-align:top;">:</td><td><div>text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept_encoding</td><td style="vertical-align:top;">:</td><td><div>gzip, deflate, sdch</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept_language</td><td style="vertical-align:top;">:</td><td><div>es-ES,es;q=0.8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_cache_control</td><td style="vertical-align:top;">:</td><td><div>max-age=0</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_connection</td><td style="vertical-align:top;">:</td><td><div>keep-alive</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_cookie</td><td style="vertical-align:top;">:</td><td><div>session_id_welcome=127.0.0.1-812cc422-02ee-4cfb-b98f-e14ecaf0fca9; session_id_naturar=127.0.0.1-04a0b155-1236-48c7-863d-066aaaace2b9; session_id_admin=127.0.0.1-7240e5df-a847-4a36-9c8c-71f953e1dcb1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_host</td><td style="vertical-align:top;">:</td><td><div>127.0.1.1:8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_upgrade_insecure_requests</td><td style="vertical-align:top;">:</td><td><div>1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_user_agent</td><td style="vertical-align:top;">:</td><td><div>Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/47.0.2526.106 Safari/537.36</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_jython</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_pypy</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_source</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">local_hosts</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>::1</div></td></tr><tr><td><div>127.0.1.1</div></td></tr><tr><td><div>::ffff:127.0.0.1</div></td></tr><tr><td><div>127.0.0.1</div></td></tr><tr><td><div>Gandalf</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path_info</td><td style="vertical-align:top;">:</td><td><div>/naturar/appadmin/index</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">query_string</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">remote_addr</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">remote_port</td><td style="vertical-align:top;">:</td><td><div>39055</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">request_method</td><td style="vertical-align:top;">:</td><td><div>GET</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">request_uri</td><td style="vertical-align:top;">:</td><td><div>/naturar/appadmin/index</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">script_name</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_name</td><td style="vertical-align:top;">:</td><td><div>Gandalf</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_port</td><td style="vertical-align:top;">:</td><td><div>8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_protocol</td><td style="vertical-align:top;">:</td><td><div>HTTP/1.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_software</td><td style="vertical-align:top;">:</td><td><div>Rocket 1.2.6</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_path</td><td style="vertical-align:top;">:</td><td><div>/home/www-data/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_version</td><td style="vertical-align:top;">:</td><td><div>2.11.2-stable+timestamp.2015.05.30.16.33.24</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.errors</td><td style="vertical-align:top;">:</td><td><div>&lt;open file &#x27;&lt;stderr&gt;&#x27;, mode &#x27;w&#x27; at 0x7f47bcc661e0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.file_wrapper</td><td style="vertical-align:top;">:</td><td><div>&lt;class wsgiref.util.FileWrapper at 0x7f47b0c714c8&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.input</td><td style="vertical-align:top;">:</td><td><div>&lt;socket._fileobject object at 0x7f47637d9f50&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.multiprocess</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.multithread</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.run_once</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.url_scheme</td><td style="vertical-align:top;">:</td><td><div>http</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.version</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>1</div></td></tr><tr><td><div>0</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_errors</td><td style="vertical-align:top;">:</td><td><div>&lt;open file &#x27;&lt;stderr&gt;&#x27;, mode &#x27;w&#x27; at 0x7f47bcc661e0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_file_wrapper</td><td style="vertical-align:top;">:</td><td><div>&lt;class wsgiref.util.FileWrapper at 0x7f47b0c714c8&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_input</td><td style="vertical-align:top;">:</td><td><div>&lt;socket._fileobject object at 0x7f47637d9f50&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_multiprocess</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_multithread</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_run_once</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_url_scheme</td><td style="vertical-align:top;">:</td><td><div>http</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_version</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>1</div></td></tr><tr><td><div>0</div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">extension</td><td style="vertical-align:top;">:</td><td><div>html</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">folder</td><td style="vertical-align:top;">:</td><td><div>/home/www-data/web2py/applications/naturar/</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">function</td><td style="vertical-align:top;">:</td><td><div>index</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">global_settings</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">app_folders</td><td style="vertical-align:top;">:</td><td><div>set([&#x27;/home/www-data/web2py/applications/welcome/&#x27;, &#x27;/home/www-data/web2py/applications/naturar/&#x27;, &#x27;/home/www-data/web2py/applications/admin/&#x27;])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">applications_parent</td><td style="vertical-align:top;">:</td><td><div>/home/www-data/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_args</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_options</td><td style="vertical-align:top;">:</td><td><div>&lt;Values at 0x7f47b09d6f38: {&#x27;verbose&#x27;: False, &#x27;ip&#x27;: &#x27;127.0.0.1&#x27;, &#x27;debuglevel&#x27;: 30, &#x27;with_scheduler&#x27;: False, &#x27;ips&#x27;: [&#x27;127.0.1.1&#x27;], &#x27;shutdown_timeout&#x27;: 5, &#x27;taskbar&#x27;: False, &#x27;with_coverage&#x27;: False, &#x27;scheduler_groups&#x27;: None, &#x27;port&#x27;: 8000, &#x27;maxthreads&#x27;: None, &#x27;softcron&#x27;: False, &#x27;server_name&#x27;: &#x27;Gandalf&#x27;, &#x27;bpython&#x27;: False, &#x27;nogui&#x27;: False, &#x27;pid_filename&#x27;: &#x27;httpserver.pid&#x27;, &#x27;print_errors&#x27;: False, &#x27;extcron&#x27;: False, &#x27;runcron&#x27;: False, &#x27;run_system_tests&#x27;: False, &#x27;test&#x27;: None, &#x27;folder&#x27;: &#x27;/home/www-data/web2py&#x27;, &#x27;config&#x27;: &#x27;&#x27;, &#x27;minthreads&#x27;: None, &#x27;shell&#x27;: None, &#x27;run&#x27;: &#x27;&#x27;, &#x27;log_filename&#x27;: &#x27;httpserver.log&#x27;, &#x27;profiler_dir&#x27;: None, &#x27;args&#x27;: [&#x27;&#x27;], &#x27;socket_timeout&#x27;: 5, &#x27;ssl_ca_certificate&#x27;: None, &#x27;scheduler&#x27;: None, &#x27;interfaces&#x27;: None, &#x27;ssl_private_key&#x27;: &#x27;&#x27;, &#x27;gae&#x27;: None, &#x27;password&#x27;: &#x27;&lt;ask&gt;&#x27;, &#x27;request_queue_size&#x27;: 5, &#x27;ssl_certificate&#x27;: &#x27;&#x27;, &#x27;cronjob&#x27;: False, &#x27;numthreads&#x27;: None, &#x27;quiet&#x27;: False, &#x27;import_models&#x27;: False, &#x27;timeout&#x27;: 10, &#x27;plain&#x27;: False, &#x27;nobanner&#x27;: False}&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">db_sessions</td><td style="vertical-align:top;">:</td><td><div>set([])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">debugging</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">gluon_parent</td><td style="vertical-align:top;">:</td><td><div>/home/www-data/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_jython</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_pypy</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_source</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">local_hosts</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>::1</div></td></tr><tr><td><div>127.0.1.1</div></td></tr><tr><td><div>::ffff:127.0.0.1</div></td></tr><tr><td><div>127.0.0.1</div></td></tr><tr><td><div>Gandalf</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_version</td><td style="vertical-align:top;">:</td><td><div>2.11.2-stable+timestamp.2015.05.30.16.33.24</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_https</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_local</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_restful</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_sheduler</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_shell</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">now</td><td style="vertical-align:top;">:</td><td><div>datetime.datetime(2016, 1, 26, 13, 13, 50, 980402)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">raw_args</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">raw_extension</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">url</td><td style="vertical-align:top;">:</td><td><div>/naturar/appadmin/index</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">utcnow</td><td style="vertical-align:top;">:</td><td><div>datetime.datetime(2016, 1, 26, 16, 13, 50, 980417)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi</td><td style="vertical-align:top;">:</td><td><div>&lt;gluon.main.LazyWSGI object at 0x7f4763972f90&gt;</div></td></tr></table></div>'
tRp58
sS'frames'
p59
(lp60
(dp61
S'file'
p62
S'/home/www-data/web2py/gluon/restricted.py'
p63
sS'dump'
p64
(dp65
S'environment'
p66
S"{'A': <class 'gluon.html.A'>, 'ANY_OF': <class 'gluon.validators.ANY_OF'>, 'ASSIGNJS': <function ASSIGNJS>, 'AppConfig': <function AppConfig>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, ...}"
p67
sS'ccode'
p68
S'<code object <module> at 0x7f47637d93b0, file "/...b2py/applications/naturar/models/db.py", line 13>'
p69
ssS'lnum'
p70
I227
sS'lines'
p71
(dp72
I224
S'            ccode = code'
p73
sI225
S'        else:'
p74
sI226
S'            ccode = compile2(code, layer)'
p75
sI227
S'        exec ccode in environment'
p76
sI228
S'    except HTTP:'
p77
sI229
S'        raise'
p78
sI230
S'    except RestrictedError:'
p79
sI231
S'        # do not encapsulate (obfuscate) the original RestrictedError'
p80
sI222
S'    try:'
p81
sI223
S'        if isinstance(code, types.CodeType):'
p82
ssS'call'
p83
S"(code='# -*- coding: utf-8 -*-\\n\\n#######################...auditing\\n#~ auth.enable_record_versioning(db)\\n\\n\\n\\n', environment={'A': <class 'gluon.html.A'>, 'ANY_OF': <class 'gluon.validators.ANY_OF'>, 'ASSIGNJS': <function ASSIGNJS>, 'AppConfig': <function AppConfig>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, ...}, layer='/home/www-data/web2py/applications/naturar/models/db.py')"
p84
sS'func'
p85
S'restricted'
p86
sa(dp87
g62
S'/home/www-data/web2py/applications/naturar/models/db.py'
p88
sg64
(dp89
S'migrate'
p90
S'undefined'
p91
sS'builtinTrue'
p92
S'True'
p93
sS'fake_migrate'
p94
g91
ssg70
I217
sg71
(dp95
I212
S"db.define_table('structure_descriptor',"
p96
sI213
S'    auth.signature,'
p97
sI214
S"    Field('structuredescriptor_id', 'reference structuredescriptor'),"
p98
sI215
S"    Field('structure_id', 'reference structure'),"
p99
sI216
S"    Field('descriptorvalue'),"
p100
sI217
S'    migrate=True, fake_migrate=True,'
p101
sI218
S'    )'
p102
sI219
S''
sI220
S"'''"
p103
sI221
S'Types of compound synomys'
p104
ssg83
S'()'
p105
sg85
S'<module>'
p106
sa(dp107
g62
S'/home/www-data/web2py/gluon/packages/dal/pydal/base.py'
p108
sg64
(dp109
S'fields'
p110
S'(<Table auth_signature (id,is_active,created_on,created_by,modified_on,modified_by)>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>)'
p111
sS'self'
p112
S'<DAL uri="postgres:******@localhost/naturardb">'
p113
sS'args'
p114
S"{'fake_migrate': True, 'migrate': True}"
p115
sS'tablename'
p116
S"'structure_descriptor'"
p117
sS'table'
p118
g91
sS'self.lazy_define_table'
p119
S'<bound method DAL.lazy_define_table of <DAL uri="postgres:******@localhost/naturardb">>'
p120
ssg70
I819
sg71
(dp121
I814
S'                    % (tablename,invalid_args))'
p122
sI815
S'        if self._lazy_tables and tablename not in self._LAZY_TABLES:'
p123
sI816
S'            self._LAZY_TABLES[tablename] = (tablename,fields,args)'
p124
sI817
S'            table = None'
p125
sI818
S'        else:'
p126
sI819
S'            table = self.lazy_define_table(tablename,*fields,**args)'
p127
sI820
S'        if not tablename in self.tables:'
p128
sI821
S'            self.tables.append(tablename)'
p129
sI822
S'        return table'
p130
sI823
S''
ssg83
S'(self=<DAL uri="postgres:******@localhost/naturardb">, tablename=\'structure_descriptor\', *fields=(<Table auth_signature (id,is_active,created_on,created_by,modified_on,modified_by)>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>), **args={\'fake_migrate\': True, \'migrate\': True})'
p131
sg85
S'define_table'
p132
sa(dp133
g62
S'/home/www-data/web2py/gluon/packages/dal/pydal/base.py'
p134
sg64
(dp135
S'polymodel'
p136
S'None'
p137
ssg70
I858
sg71
(dp138
I853
S'            try:'
p139
sI854
S'                GLOBAL_LOCKER.acquire()'
p140
sI855
S'                self._lastsql = self._adapter.create_table('
p141
sI856
S'                    table,migrate=migrate,'
p142
sI857
S'                    fake_migrate=fake_migrate,'
p143
sI858
S'                    polymodel=polymodel)'
p144
sI859
S'            finally:'
p145
sI860
S'                GLOBAL_LOCKER.release()'
p146
sI861
S'        else:'
p147
sI862
S'            table._dbt = None'
p148
ssg83
S'(self=<DAL uri="postgres:******@localhost/naturardb">, tablename=\'structure_descriptor\', *fields=(<Table auth_signature (id,is_active,created_on,created_by,modified_on,modified_by)>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>), **args={\'fake_migrate\': True, \'migrate\': True})'
p149
sg85
S'lazy_define_table'
p150
sa(dp151
g62
S'/home/www-data/web2py/gluon/packages/dal/pydal/adapters/base.py'
p152
sg64
(dp153
S'table'
p154
S'<Table structure_descriptor (id,is_active,create...cturedescriptor_id,structure_id,descriptorvalue)>'
p155
sS'table._tablename'
p156
S"'structure_descriptor'"
p157
sS'referenced'
p158
S"'structure'"
p159
sS'builtinKeyError'
p160
S"<type 'exceptions.KeyError'>"
p161
ssg70
I283
sg71
(dp162
I278
S"                        rtablename,rfieldname = referenced.split('.')"
p163
sI279
S'                        rtable = db[rtablename]'
p164
sI280
S'                        rfield = rtable[rfieldname]'
p165
sI281
S'                    except Exception as e:'
p166
sI282
S"                        self.db.logger.debug('Error: %s' %e)"
p167
sI283
S"                        raise KeyError('Cannot resolve reference %s in %s definition' % (referenced, table._tablename))"
p168
sI284
S''
sI285
S'                # must be PK reference or unique'
p169
sI286
S"                if getattr(rtable, '_primarykey', None) and rfieldname in rtable._primarykey or \\"
p170
sI287
S'                        rfield.unique:'
p171
ssg83
S'(self=<pydal.adapters.postgres.PostgreSQLAdapter object>, table=<Table structure_descriptor (id,is_active,create...cturedescriptor_id,structure_id,descriptorvalue)>, migrate=True, fake_migrate=True, polymodel=None)'
p172
sg85
S'create_table'
p173
sasS'pyver'
p174
S'Python 2.7.6: /usr/bin/python (prefix: /usr)'
p175
sS'session'
p176
g57
(S's\x1a\x00\x00\x00<div><table></table></div>'
tRp177
sS'etype'
p178
S"<type 'exceptions.KeyError'>"
p179
sS'date'
p180
S'Tue Jan 26 13:13:51 2016'
p181
sS'response'
p182
g57
(S's\xfa\x17\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top;">body</td><td style="vertical-align:top;">:</td><td><div>&lt;cStringIO.StringO object at 0x7f4763631d18&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cookies</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">session_id_naturar</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-04a0b155-1236-48c7-863d-066aaaace2b9<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div>/</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">delimiters</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>{{</div></td></tr><tr><td><div>}}</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">files</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">flash</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">form_label_separator</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">formstyle</td><td style="vertical-align:top;">:</td><td><div>bootstrap3_inline</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">generic_patterns</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>*</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">headers</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">X-Powered-By</td><td style="vertical-align:top;">:</td><td><div>web2py</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">menu</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">meta</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">models_to_run</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>^\\w+\\.py$</div></td></tr><tr><td><div>^appadmin/\\w+\\.py$</div></td></tr><tr><td><div>^appadmin/index/\\w+\\.py$</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">postprocessing</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_client</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_cookie_compression_level</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_cookie_expires</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_cookie_key</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_data_name</td><td style="vertical-align:top;">:</td><td><div>session_data_naturar</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_file</td><td style="vertical-align:top;">:</td><td><div>&lt;open file &#x27;/home/www-data/web2py/applications/naturar/sessions/0e1/018/127.0.0.1-04a0b155-1236-48c7-863d-066aaaace2b9&#x27;, mode &#x27;rb+&#x27; at 0x7f47639a2030&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_filename</td><td style="vertical-align:top;">:</td><td><div>/home/www-data/web2py/applications/naturar/sessions/127.0.0.1-04a0b155-1236-48c7-863d-066aaaace2b9</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_hash</td><td style="vertical-align:top;">:</td><td><div>12829ed4ad4d131870cc0bb239ce1b3d</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-04a0b155-1236-48c7-863d-066aaaace2b9</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_name</td><td style="vertical-align:top;">:</td><td><div>session_id_naturar</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_locked</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_masterapp</td><td style="vertical-align:top;">:</td><td><div>naturar</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_new</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_storage_type</td><td style="vertical-align:top;">:</td><td><div>file</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">status</td><td style="vertical-align:top;">:</td><td><div>200</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">view</td><td style="vertical-align:top;">:</td><td><div>appadmin/index.html</div></td></tr></table></div>'
tRp183
sS'locals'
p184
(dp185
S'rtablename'
p186
S"'structuredescriptor'"
p187
sS'referenced'
p188
S"'structure'"
p189
sS'migrate'
p190
g93
sS'constraint_name'
p191
S"'structure_descriptor_structure_id__constraint'"
p192
sS'table'
p193
S'<Table structure_descriptor (id,is_active,create...cturedescriptor_id,structure_id,descriptorvalue)>'
p194
sS'real_referenced'
p195
S"'structuredescriptor'"
p196
sS'postcreation_fields'
p197
S'[]'
p198
sS'field_type'
p199
S"'reference structure'"
p200
sS'self'
p201
S'<pydal.adapters.postgres.PostgreSQLAdapter object>'
p202
sS'tablename'
p203
S"'structure_descriptor'"
p204
sS'field'
p205
S'<pydal.objects.Field object>'
p206
sS'ftype'
p207
S"'INTEGER REFERENCES structuredescriptor (id) ON DELETE CASCADE'"
p208
sS'rtable'
p209
S'<Table structuredescriptor (id,is_active,created_on,created_by,modified_on,modified_by,methodname)>'
p210
sS'id_fieldname'
p211
S"'id'"
p212
sS'polymodel'
p213
S'None'
p214
sS'rfieldname'
p215
S"'id'"
p216
sS'db'
p217
S'<DAL uri="postgres:******@localhost/naturardb">'
p218
sS'fake_migrate'
p219
g93
sS'e'
S"ValueError('need more than 1 value to unpack',)"
p220
sS'sql_fields'
p221
S"{'created_by': {'length': 512, 'notnull': False, 'sortable': 4, 'sql': 'INTEGER REFERENCES auth_user (id) ON DELETE CASCADE', 'type': 'reference auth_user', 'unique': False}, 'created_on': {'length': 512, 'notnull': False, 'sortable': 3, 'sql': 'TIMESTAMP', 'type': 'datetime', 'unique': False}, 'id': {'length': 512, 'notnull': False, 'sortable': 1, 'sql': 'SERIAL PRIMARY KEY', 'type': 'id', 'unique': False}, 'is_active': {'length': 512, 'notnull': False, 'sortable': 2, 'sql': 'CHAR(1)', 'type': 'boolean', 'unique': False}, 'modified_by': {'length': 512, 'notnull': False, 'sortable': 6, 'sql': 'INTEGER REFERENCES auth_user (id) ON DELETE CASCADE', 'type': 'reference auth_user', 'unique': False}, 'modified_on': {'length': 512, 'notnull': False, 'sortable': 5, 'sql': 'TIMESTAMP', 'type': 'datetime', 'unique': False}, 'structuredescriptor_id': {'length': 512, 'notnull': False, 'sortable': 7, 'sql': 'INTEGER REFERENCES structuredescriptor (id) ON DELETE CASCADE', 'type': 'reference structuredescriptor', 'unique': False}}"
p222
sS'field_name'
p223
S"'structure_id'"
p224
sS'types'
p225
S"{'big-id': 'BIGSERIAL PRIMARY KEY', 'big-reference': 'BIGINT REFERENCES %(foreign_key)s ON DELETE %(on_delete_action)s', 'bigint': 'BIGINT', 'blob': 'BYTEA', 'boolean': 'CHAR(1)', 'date': 'DATE', 'datetime': 'TIMESTAMP', 'decimal': 'NUMERIC(%(precision)s,%(scale)s)', 'double': 'FLOAT8', 'float': 'FLOAT', ...}"
p226
sS'sortable'
p227
S'8'
sS'sql_fields_aux'
p228
S"{'created_by': {'sql': 'INTEGER REFERENCES auth_user (id) ON DELETE CASCADE'}, 'created_on': {'sql': 'TIMESTAMP'}, 'id': {'sql': 'SERIAL PRIMARY KEY'}, 'is_active': {'sql': 'CHAR(1)'}, 'modified_by': {'sql': 'INTEGER REFERENCES auth_user (id) ON DELETE CASCADE'}, 'modified_on': {'sql': 'TIMESTAMP'}, 'structuredescriptor_id': {'sql': 'INTEGER REFERENCES structuredescriptor (id) ON DELETE CASCADE'}}"
p229
sS'TFK'
p230
g45
sS'fields'
p231
S"['id SERIAL PRIMARY KEY', 'is_active CHAR(1)', 'created_on TIMESTAMP', 'created_by INTEGER REFERENCES auth_user (id) ON DELETE CASCADE', 'modified_on TIMESTAMP', 'modified_by INTEGER REFERENCES auth_user (id) ON DELETE CASCADE', 'structuredescriptor_id INTEGER REFERENCES structuredescriptor (id) ON DELETE CASCADE']"
p232
sS'rfield'
p233
S'<pydal.objects.Field object>'
p234
sssS'traceback'
p235
S'Traceback (most recent call last):\n  File "/home/www-data/web2py/gluon/restricted.py", line 227, in restricted\n    exec ccode in environment\n  File "/home/www-data/web2py/applications/naturar/models/db.py", line 217, in <module>\n    migrate=True, fake_migrate=True,\n  File "/home/www-data/web2py/gluon/packages/dal/pydal/base.py", line 819, in define_table\n    table = self.lazy_define_table(tablename,*fields,**args)\n  File "/home/www-data/web2py/gluon/packages/dal/pydal/base.py", line 858, in lazy_define_table\n    polymodel=polymodel)\n  File "/home/www-data/web2py/gluon/packages/dal/pydal/adapters/base.py", line 283, in create_table\n    raise KeyError(\'Cannot resolve reference %s in %s definition\' % (referenced, table._tablename))\nKeyError: \'Cannot resolve reference structure in structure_descriptor definition\'\n'
p236
s.